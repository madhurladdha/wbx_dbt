{{ config(
    tags=["wbx", "sales","actuals","sales_actuals"],
    snowflake_warehouse= env_var("DBT_WBX_SF_WH"),
    ) 
}}

with stage_table as (
    select * from {{ ref('stg_f_wbx_sls_order') }}
),

dim_wbx_item as (
    select * from {{ ref('dim_wbx_item') }}
),

dim_wbx_company as (
    select * from {{ ref('dim_wbx_company') }}
),

dim_date as (
    select * from {{ ref('src_dim_date') }}
),

currency_exch_rate_dly_dim as (
    select * from {{ ref("src_currency_exch_rate_dly_dim") }} where eff_from_d >= '01-JAN-2015' 
),


lkp_Curr_Exch_Rate_Dly as (
    select distinct
    a.curr_from_code as curr_from_code,
    a.curr_to_code as curr_to_code,
    a.curr_conv_rt as curr_conv_rt,
    b.calendar_date as calendar_date 
    from currency_exch_rate_dly_dim a
    join	
    (select max(a1.eff_from_d) as eff_from_d,curr_from_code,curr_to_code,calendar_date
    from currency_exch_rate_dly_dim a1
    join 
    dim_date d1
    on a1.eff_from_d <= d1.calendar_date
    where a1.curr_conv_rt <> 0
    group by curr_from_code,curr_to_code,calendar_date)b
    on a.curr_from_code=b.curr_from_code
    and a.curr_to_code=b.curr_to_code
    and a.eff_from_d=b.eff_from_d
),

ref_effective_currency_dim as (
    select distinct
        source_system,
        company_code,
        effective_date,
        expiration_date,
        parent_currency_code
    from {{ ref("src_ref_effective_currency_dim") }} where source_system = '{{env_var("DBT_SOURCE_SYSTEM")}}'
),

source as (
    select
        stg.source_system,
        stg.sales_line_number,
        stg.sales_order_number,
        stg.source_sales_order_type,
        stg.sales_order_company,
        stg.source_employee_code,
        stg.source_line_type_code,
        stg.ship_source_business_unit_code,
        stg.source_business_unit_code,
        stg.ship_source_customer_code,
        stg.bill_source_customer_code,
        stg.source_item_identifier,
        stg.org_unit_code,
        stg.invoice_document_company,
        stg.invoice_document_number,
        stg.invoice_document_type,
        stg.source_location_code,
        stg.source_lot_code,
        stg.lot_status_code,
        stg.ordered_date,
        --nvl(stg.line_actual_ship_date,'1900-01-01') as line_actual_ship_date,
        stg.line_actual_ship_date,
        stg.line_sch_pick_up_date,
        stg.line_prom_ship_date,
        stg.line_cancelled_date,
        --nvl(stg.line_invoice_date,'1900-01-01') as line_invoice_date,
        stg.line_invoice_date,
        stg.line_requested_date,
        stg.line_original_promised_date,
        stg.line_promised_delivery_date,
        stg.line_gl_date,
        stg.required_delivery_date,
        stg.lead_time,
        stg.customer_po_number,
        stg.kit_source_item_identifier,
        stg.kit_line_number,
        stg.kit_component_number,
        stg.component_line_no,
        stg.price_override_flag,
        stg.cost_override_flag,
        stg.source_payment_terms_code,
        stg.source_freight_handling_code,
        stg.transaction_quantity_uom,
        stg.transaction_price_uom,
        stg.ordered_tran_quantity,
        stg.shipped_tran_quantity,
        stg.cancel_tran_quantity,
        stg.short_tran_quantity,
        stg.backord_tran_quantity,
        stg.transaction_currency,
        stg.trans_unit_tran_price,
        stg.trans_list_tran_price,
        stg.trans_extend_tran_price,
        stg.tran_unit_tran_cost,
        stg.trans_extend_tran_cost,
        stg.trans_deduction_01_amt,
        stg.trans_deduction_02_amt,
        stg.trans_deduction_03_amt,
        stg.source_foreign_conv_rt,
        stg.source_updated_datetime,
        stg.short_reason_code,
        stg.trans_conv_rt,
        stg.trans_rpt_grs_amt,
        stg.trans_rpt_grs_price,
        stg.trans_rpt_net_amt,
        stg.trans_rpt_net_price,
        stg.line_status_code,
        stg.open_tran_quantity,
        stg.source_payment_instr_code,
        stg.sales_tran_quantity,
        stg.edi_indicator,
        stg.packingslipid,
        stg.cancel_reason_code,
        stg.cancel_reason_desc,
        stg.trans_quantity_confirmed,
        stg.trans_salesprice_confirmed,
        stg.trans_lineamount_confirmed,
        stg.trans_confirmdate_confirmed,
        stg.trans_uom_confirmed,
        stg.trans_currency_confirmed,
        stg.source_object_id,
        stg.cost_centre,
        stg.trans_invoice_grs_amt,
        stg.trans_invoice_net_amt,
        stg.variant_code,
        stg.trans_invoice_disc_amt,
        stg.base_invoice_grs_amt,
        stg.base_invoice_net_amt,
        stg.base_invoice_disc_amt,
        stg.delivery_instruction,
        stg.cust_order_number,
        stg.item_shelf_life,
        stg.trans_line_requested_date,
        stg.picking_route,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.source_item_identifier']) }} AS item_guid,
        itm.division,
        itm.primary_uom,
        -- itm.gross_weight_uom,
        itm.case_gross_weight,
        itm.case_net_weight,
        nvl(comp.default_currency_code, '') as base_currency,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.source_business_unit_code',"'PLANT_DC'"]) }} AS business_unit_address_guid,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.bill_source_customer_code',"'PLANT_DC'"]) }} AS ship_business_unit_guid,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.source_payment_terms_code']) }} as payment_terms_guid,
        date_line_gl.calendar_date_id as line_gl_id,
        date_line_gl.calendar_date as line_gl_date_v2,
        date_line_gl_fis.fiscal_year_period_no as v_fiscal_gl_date_no,
        date_srce_upd.calendar_date_id as o_source_updated_d_id,
        -- div.default_company_code as o_invoice_document_number,
        cast(null as decimal(38)) as kit1_item_guid,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.ship_source_customer_code',"'CUSTOMER_MAIN'","stg.sales_order_company"]) }} AS ship_customer_address_guid,
        {{ dbt_utils.surrogate_key(['stg.source_system','stg.ship_source_customer_code',"'CUSTOMER_MAIN'","stg.sales_order_company"]) }} AS bill_customer_address_guid,
        nvl(curr.parent_currency_code, ' ') as pcomp_currency,
        'USD' as phi_currency
    from stage_table stg
    left join dim_wbx_item itm
        on stg.source_system = itm.source_system
        and stg.source_item_identifier = itm.source_item_identifier
        and stg.source_business_unit_code = itm.source_business_unit_code
    left join dim_wbx_company comp
        on stg.source_system = comp.source_system
        and stg.sales_order_company = comp.company_code
    left join dim_date date_line_gl
        on date_line_gl.calendar_date = nvl(line_gl_date, trunc(ordered_date, 'DAY'))
    left join dim_date date_line_gl_fis
        on date_line_gl_fis.calendar_date = line_gl_date
    left join dim_date date_srce_upd
        on date_srce_upd.calendar_date = trunc(source_updated_datetime, 'DAY')
    -- left join ADR_DIV_MASTER_DIM div
    --     on div.source_system = stg.source_system
    --     and div.division_code = itm.division
    left join ref_effective_currency_dim curr
        on curr.source_system = stg.source_system
        and curr.company_code = stg.sales_order_company
        and curr.effective_date <= to_date(line_gl_date)
        and curr.expiration_date >= to_date(line_gl_date)
),

trans_source as (
    select 
        source.*,
        ref_normalization_xref_sls_ordr_typ.normalized_value as o_sales_order_type,
        ref_normalization_xref_line_code.normalized_value as o_line_type_code,
        ref_normalization_xref_line_desc.normalized_value as o_line_type_desc,
        ref_normalization_xref_line_sta_cd.normalized_value as o_line_status_desc,
        ref_normalization_xref_freight_sta_cd.normalized_value as o_source_freight_handling_code,
        ref_normalization_xref_freight_sta_desc.normalized_value as o_source_freight_handling_desc,
        ref_normalization_xref_trans_qty_uom.normalized_value as v_transaction_quantity_uom,
        ref_normalization_xref_trans_price_uom.normalized_value as o_transaction_price_uom,
        ref_normalization_xref_trans_uom_conf.normalized_value as o_trans_uom_confirmed,
        ref_normalization_xref_short_reason_code.normalized_value as short_reason_desc,
        ref_normalization_xref_src_pymt_cd.normalized_value as target_payment_instr_code,
        ref_normalization_xref_src_pymt_name.normalized_value as payment_instr_desc,
        coalesce(source_location_code,'-') as o_source_location_code,
        coalesce(source_lot_code,'-') as o_source_lot_code,
        coalesce(lot_status_code,'-') as o_lot_status_code,
        iff (datediff(day,line_actual_ship_date,line_prom_ship_date)< 0 , '1' , '0') as early_flag,
        iff (datediff(day,line_actual_ship_date,line_prom_ship_date)> 0 , '1' , '0') as late_flag,        
        100 as var_lb_cw_uom_conv,
        0.453592 as var_lb_kg_uom_conv,
        2.20462 as var_kg_lb_uom_conv,
        220.462 as var_kg_cw_uom_conv,
        0.01 as var_cw_lb_uom_conv,
        0.00453592 as var_cw_kg_uom_conv,
        0 as var_default_conv_rate        
    from source
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','LOGISTICS','SALES_ORDER_CODE','TO_CHAR(TO_number(SOURCE_SALES_ORDER_TYPE))','ref_normalization_xref_sls_ordr_typ') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','LOGISTICS','LINE_TYPE_CODE','SOURCE_LINE_TYPE_CODE','ref_normalization_xref_line_code') }}
    left join {{ ent_dbt_package.lkp_normalization("'WEETABIX'",'LOGISTICS','LINE_TYPE_DESC','SOURCE_LINE_TYPE_CODE','ref_normalization_xref_line_desc') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','LOGISTICS','STATUS_CODE_DESC','UPPER(RTRIM(LTRIM(LINE_STATUS_CODE)))','ref_normalization_xref_line_sta_cd') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ADDRESS_BOOK','FREIGHT_HANDLING_CODE','UPPER(RTRIM(LTRIM(SOURCE_FREIGHT_HANDLING_CODE)))','ref_normalization_xref_freight_sta_cd') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ADDRESS_BOOK','FREIGHT_HANDLING_DESC','UPPER(RTRIM(LTRIM(SOURCE_FREIGHT_HANDLING_CODE)))','ref_normalization_xref_freight_sta_desc') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ITEM','PRIMARY_UOM','UPPER(RTRIM(LTRIM(TRANSACTION_QUANTITY_UOM)))','ref_normalization_xref_trans_qty_uom') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ITEM','PRIMARY_UOM','UPPER(RTRIM(LTRIM(TRANSACTION_PRICE_UOM)))','ref_normalization_xref_trans_price_uom') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ITEM','PRIMARY_UOM','UPPER(RTRIM(LTRIM(TRANS_UOM_CONFIRMED)))','ref_normalization_xref_trans_uom_conf') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','LOGISTICS','REASON_CODE_DESC','UPPER(RTRIM(LTRIM(SHORT_REASON_CODE)))','ref_normalization_xref_short_reason_code') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ADDRESS_BOOK','PAYMENT_INSTRUMENT_CODE','UPPER(RTRIM(LTRIM(SOURCE_PAYMENT_INSTR_CODE)))','ref_normalization_xref_src_pymt_cd') }}
    left join {{ ent_dbt_package.lkp_normalization('source.source_system','ADDRESS_BOOK','PAYMENT_INSTRUMENT_NAME','UPPER(RTRIM(LTRIM(SOURCE_PAYMENT_INSTR_CODE)))','ref_normalization_xref_src_pymt_name') }}

),
gen_unique_key as (
     select
            trans_source.*,
            {{
                dbt_utils.surrogate_key(
                    [
                        "cast(substring(source_system,1,255) as text(255) )",
                        "cast(substring(sales_line_number,1,255) as text(255) )",
                        "cast(substring(sales_order_number,1,255) as text(255) )",
                        "cast(substring(source_sales_order_type,1,20) as text(20) )",
                        "cast(substring(sales_order_company,1,20) as text(20) )",
                        "cast(line_invoice_date as timestamp_ntz(9) )",
                        "cast(line_actual_ship_date as timestamp_ntz(9) )"                      
                    ]
                )
            }} as unique_key
        from trans_source
),


gen_rate_source as (
    select 
        gen_unique_key.*,
        iff(base_currency = transaction_currency , 1, coalesce (trans.curr_conv_rt,0)) as v_trans_conv_rt,
        iff(base_currency = phi_currency, 1, coalesce (phi.curr_conv_rt,0)) as v_phi_conv_rt,
        1 as base_conv_rt,
        iff(base_currency = pcomp_currency, 1, coalesce (pcom.curr_conv_rt,0)) as v_pcomp_conv_rt,
        coalesce (phi_mth.curr_conversion_rt,0) as v_phi_mth_conv_rt,
        coalesce (trans_mth.curr_conversion_rt,0) as v_mth_trans_conv_rt,
        coalesce (pcom_mth.curr_conversion_rt,0) as v_mth_pcomp_conv_rt,
        current_timestamp() as load_date,
        current_timestamp() as update_date
    from gen_unique_key
    /*
    left join {{ ent_dbt_package.lkp_exchange_rate_daily('base_currency','transaction_currency','v_trans_conv_rt_max_date','trans') }}
    left join {{ ent_dbt_package.lkp_exchange_rate_daily('base_currency','phi_currency','v_phi_conv_rt_max_date','phi') }}
    left join {{ ent_dbt_package.lkp_exchange_rate_daily('base_currency','pcomp_currency','v_pcomp_mth_conv_rt_max_date','pcom') }}
    */
    left join lkp_curr_exch_rate_dly trans  
        on trans.curr_from_code	= base_currency	 
        and trans.curr_to_code	= transaction_currency	 
        and trans.calendar_date	= line_gl_date_v2
    left join lkp_curr_exch_rate_dly phi  
        on phi.curr_from_code	= base_currency	 
        and phi.curr_to_code	= phi_currency 	 
        and phi.calendar_date	= line_gl_date_v2  
    left join lkp_curr_exch_rate_dly pcom  
        on pcom.curr_from_code	= base_currency	 
        and pcom.curr_to_code	= pcomp_currency	 
        and pcom.calendar_date	= line_gl_date_v2 
    left join {{ ent_dbt_package.lkp_exchange_rate_month('base_currency','transaction_currency','v_fiscal_gl_date_no',"'A'",'trans_mth') }}
    left join {{ ent_dbt_package.lkp_exchange_rate_month('base_currency','phi_currency','v_fiscal_gl_date_no',"'A'",'phi_mth') }}
    left join {{ ent_dbt_package.lkp_exchange_rate_month('base_currency','pcomp_currency','v_fiscal_gl_date_no',"'A'",'pcom_mth') }}
),

uom_calc as (
    select 
        gen_rate_source.*,
        tq_lb.conversion_rate as v_lb_conv,
        tq_kg.conversion_rate as v_kg_conv,
        tq_cw.conversion_rate as v_cw_conv,
        tq_primary_uom.conversion_rate as v_primary_uom_conv,
        tq_pl.conversion_rate as v_transaction_pl_conv,
        tq_ca.conversion_rate as v_transaction_ca_conv,
        uom_lb_pl.conversion_rate as v_lb_pl_conv,
        uom_kg_pl.conversion_rate as var_kg_pl_uom_conv,
        uom_lb_ca.conversion_rate as v_lb_ca_conv,
        uom_cw_pl.conversion_rate as v_cw_pl_conv,
        uom_kg_ca.conversion_rate as v_kg_ca_conv,
        uom_cw_ca.conversion_rate as v_cw_ca_conv,
        uom_ca_kg.conversion_rate as var_ca_kg_uom_conv
    from gen_rate_source
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'CA'","'KG'",'uom_ca_kg') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom',"'LB'",'tq_lb') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom',"'KG'",'tq_kg') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom',"'CW'",'tq_cw') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom',"'CA'",'tq_ca') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom','primary_uom','tq_primary_uom') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID','v_transaction_quantity_uom',"'PL'",'tq_pl') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'LB'","'PL'",'uom_lb_pl') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'KG'","'PL'",'uom_kg_pl') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'LB'","'CA'",'uom_lb_ca') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'CW'","'PL'",'uom_cw_pl') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'KG'","'CA'",'uom_kg_ca') }}
    left join {{ ent_dbt_package.lkp_uom('gen_rate_source.ITEM_GUID',"'CW'","'CA'",'uom_cw_ca') }}
),

rt_calc as (
    select 
        uom_calc.*,
        primary_uom as LKP_PRIMARY_UOM,
        iff( v_TRANSACTION_QUANTITY_UOM = 'CW' , 1 ,
            iff (v_TRANSACTION_QUANTITY_UOM = 'LB' , var_LB_CW_UOM_CONV ,
                iff (v_TRANSACTION_QUANTITY_UOM = 'KG' , var_KG_CW_UOM_CONV ,
                    iff( v_KG_CONV is not null, v_kg_conv * var_KG_CW_UOM_CONV , iff( v_lb_conv is not null, v_lb_conv * var_LB_CW_UOM_CONV , var_DEFAULT_CONV_RATE))))) as var_TRAN_CWT_UOM_CONV,
        iff( v_TRANSACTION_QUANTITY_UOM = 'LB' , 1 ,iff (v_TRANSACTION_QUANTITY_UOM = 'CW' , var_CW_LB_UOM_CONV ,
            iff (v_TRANSACTION_QUANTITY_UOM = 'KG' , var_KG_LB_UOM_CONV ,iff( v_LB_CONV is not null ,v_LB_CONV, 
                iff (v_CW_CONV is not null ,v_CW_CONV * var_CW_LB_UOM_CONV, iff( v_KG_CONV is not null ,v_KG_CONV * var_KG_LB_UOM_CONV , var_DEFAULT_CONV_RATE)))))) as var_TRAN_LB_UOM_CONV,
        iff( v_TRANSACTION_QUANTITY_UOM = 'KG' , 1 ,iff (v_TRANSACTION_QUANTITY_UOM = 'LB' , var_LB_KG_UOM_CONV , 
            iff( v_KG_CONV is not null, v_KG_CONV , iff( v_lb_conv is not null, v_lb_conv * var_LB_KG_UOM_CONV , var_DEFAULT_CONV_RATE) ))) as var_TRAN_KG_UOM_CONV,
        iff( v_TRANSACTION_QUANTITY_UOM = LKP_PRIMARY_UOM , 1, 
            iff( LKP_PRIMARY_UOM = 'LB' , var_TRAN_LB_UOM_CONV ,iff (LKP_PRIMARY_UOM = 'CW' , var_TRAN_CWT_UOM_CONV ,
                iff (LKP_PRIMARY_UOM = 'KG' , var_TRAN_KG_UOM_CONV , iff(v_primary_uom_conv is not null, v_primary_uom_conv,var_DEFAULT_CONV_RATE))))) as var_TRAN_PRIM_UOM_CONV,
        iff( v_TRANSACTION_QUANTITY_UOM = 'CA' , 1 , iff( v_transaction_ca_conv is not null, v_transaction_ca_conv,var_DEFAULT_CONV_RATE)) as var_TRAN_CA_UOM_CONV,
        OPEN_TRAN_QUANTITY * var_TRAN_CA_UOM_CONV as v_OPEN_CA_QUANTITY,
        v_OPEN_CA_QUANTITY as OPEN_CA_QUANTITY,
        iff( v_TRANSACTION_QUANTITY_UOM = 'PL' , 1 , iff( v_transaction_pl_conv is not null,v_transaction_pl_conv , var_DEFAULT_CONV_RATE) ) as var_TRAN_UL_UOM_CONV,
        LINE_GL_DATE as v_LINE_GL_DATE,
        /*iff ( DATE_PART(MONTH,v_LINE_GL_DATE) >= 10 ,DATE_PART(YEAR,v_LINE_GL_DATE) * 100 + DATE_PART(MONTH,v_LINE_GL_DATE) - 9, (DATE_PART(YEAR,v_LINE_GL_DATE) - 1) * 100 + DATE_PART(MONTH,v_LINE_GL_DATE) +3) as v_FISCAL_GL_DATE_NO,*/
        case_net_weight * var_ca_kg_uom_conv as v_net_kg_weight,
        case_gross_weight * var_ca_kg_uom_conv as v_gross_kg_weight,
        v_gross_kg_weight as gross_kg_weight,
        short_tran_quantity * var_tran_prim_uom_conv as v_short_prim_quantity,
        v_short_prim_quantity as short_prim_quantity,
        ordered_tran_quantity * var_tran_prim_uom_conv as v_ordered_prim_quantity,
        v_ordered_prim_quantity as ordered_prim_quantity,
        shipped_tran_quantity * var_tran_prim_uom_conv as v_shipped_prim_quantity,
        v_shipped_prim_quantity as shipped_prim_quantity,
        backord_tran_quantity * var_tran_prim_uom_conv as v_backorder_prim_quantity,
        v_backorder_prim_quantity as backorder_prim_quantity,
        cancel_tran_quantity * var_tran_prim_uom_conv as v_cancelled_prim_quantity,
        v_cancelled_prim_quantity as cancelled_prim_quantity,
        open_tran_quantity * var_tran_prim_uom_conv as v_open_prim_quantity,
        v_open_prim_quantity as open_prim_quantity,
        ordered_tran_quantity * var_tran_cwt_uom_conv as v_ordered_cwt_quantity,
        v_ordered_cwt_quantity as ordered_cwt_quantity,
        shipped_tran_quantity * var_tran_cwt_uom_conv as v_shipped_cwt_quantity,
        v_shipped_cwt_quantity as shipped_cwt_quantity,
        backord_tran_quantity *var_tran_cwt_uom_conv as v_backord_cwt_quantity,
        v_backord_cwt_quantity as backord_cwt_quantity,
        cancel_tran_quantity * var_tran_cwt_uom_conv as v_cancel_cwt_quantity,
        short_tran_quantity * var_tran_cwt_uom_conv as v_short_cwt_quantity,
        open_tran_quantity * var_tran_cwt_uom_conv as v_open_cwt_quantity,
        transaction_currency as v_trans_currency,
        ordered_tran_quantity * var_tran_ca_uom_conv as v_ordered_ca_quantity,
        shipped_tran_quantity * var_tran_ca_uom_conv as v_shipped_ca_quantity,
        backord_tran_quantity * var_tran_ca_uom_conv as v_backord_ca_quantity,
        cancel_tran_quantity * var_tran_ca_uom_conv as v_cancel_ca_quantity,
        short_tran_quantity * var_tran_ca_uom_conv as v_short_ca_quantity,
        v_cancel_cwt_quantity as cancel_cwt_quantity,
        v_short_cwt_quantity as short_cwt_quantity,
        v_open_cwt_quantity as open_cwt_quantity,
        v_ordered_ca_quantity as ordered_ca_quantity,
        v_shipped_ca_quantity as shipped_ca_quantity,
        v_backord_ca_quantity as backord_ca_quantity,
        v_cancel_ca_quantity as cancel_ca_quantity,
        v_short_ca_quantity as short_ca_quantity,
        ordered_tran_quantity * var_tran_ul_uom_conv as v_ordered_ul_quantity,
        shipped_tran_quantity *var_tran_ul_uom_conv as v_shipped_ul_quantity,
        short_tran_quantity * var_tran_ul_uom_conv as v_short_ul_quantity,
        backord_tran_quantity * var_tran_ul_uom_conv as v_backord_ul_quantity,
        cancel_tran_quantity *var_tran_ul_uom_conv as v_cancel_ul_quantity,
        open_tran_quantity *var_tran_ul_uom_conv as v_open_ul_quantity,
        ordered_tran_quantity *var_tran_kg_uom_conv as v_ordered_kg_quantity,
        shipped_tran_quantity *var_tran_kg_uom_conv as v_shipped_kg_quantity,
        cancel_tran_quantity * var_tran_kg_uom_conv as v_cancel_kg_quantity,
        backord_tran_quantity *var_tran_kg_uom_conv as v_backord_kg_quantity,
        short_tran_quantity * var_tran_kg_uom_conv as v_short_kg_quantity,
        open_tran_quantity * var_tran_kg_uom_conv as v_open_kg_quantity,
        v_ordered_ul_quantity as ordered_ul_quantity,
        v_shipped_ul_quantity as shipped_ul_quantity,
        v_short_ul_quantity as short_ul_quantity,
        v_backord_ul_quantity as backord_ul_quantity,
        v_cancel_ul_quantity as cancel_ul_quantity,
        v_open_ul_quantity as open_ul_quantity,
        v_ordered_kg_quantity as ordered_kg_quantity,
        v_shipped_kg_quantity as shipped_kg_quantity,
        v_cancel_kg_quantity as cancel_kg_quantity,
        v_backord_kg_quantity as backord_kg_quantity,
        v_short_kg_quantity as short_kg_quantity,
        v_open_kg_quantity as open_kg_quantity,
        base_currency as v_base_currency,
        pcomp_currency as v_pcomp_currency,
        iff(v_trans_conv_rt=0 ,0,trans_unit_tran_price * (1/v_trans_conv_rt) * var_tran_prim_uom_conv) as base_unit_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_list_tran_price * (1/v_trans_conv_rt) * var_tran_prim_uom_conv) as base_list_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_extend_tran_price * (1/v_trans_conv_rt)) as base_extend_tran_price,
        iff(v_trans_conv_rt=0 ,0,tran_unit_tran_cost* (1/v_trans_conv_rt)) as base_unit_prim_cost,
        iff(v_trans_conv_rt=0 ,0,trans_extend_tran_price * (1/v_trans_conv_rt)) as base_extend_tran_cost,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt)* (var_tran_prim_uom_conv)) as v_base_rpt_grs_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_amt * (1/v_trans_conv_rt)* (var_tran_prim_uom_conv)) as v_base_rpt_grs_prim_amt,
        v_base_rpt_grs_prim_price as base_rpt_grs_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt)* (var_tran_prim_uom_conv))  as v_base_rpt_net_prim_price,
        v_base_rpt_net_prim_price as base_rpt_net_prim_price,
        v_phi_conv_rt as phi_conv_rt,
        v_pcomp_conv_rt as pcomp_conv_rt,
        v_mth_pcomp_conv_rt as mth_pcomp_conv_rt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_amt * (1/v_trans_conv_rt)* (var_tran_prim_uom_conv)) as v_base_rpt_net_prim_amt,
        v_base_rpt_net_prim_amt as base_rpt_net_prim_amt,
        0 as base_ext_ing_cost,
        0 as base_ext_pkg_cost,
        0 as base_ext_mfg_cost,
        0 as base_ext_fxd_cost,
        0 as base_ext_var_cost,
        0 as base_ext_lbr_cost,
        0 as base_ext_oth_cost,
        v_mth_trans_conv_rt as mth_trans_conv_rt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_amt * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_prim_uom_conv)) as phi_rpt_grs_prim_amt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price* (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_prim_uom_conv)) as phi_rpt_grs_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_amt * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_prim_uom_conv)) as phi_rpt_net_prim_amt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price* (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_prim_uom_conv)) as phi_rpt_net_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_amt * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_prim_uom_conv)) as pcomp_rpt_grs_prim_amt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price* (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_prim_uom_conv)) as pcomp_rpt_grs_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_amt * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_prim_uom_conv)) as pcomp_rpt_net_prim_amt,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price* (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_prim_uom_conv)) as pcomp_rpt_net_prim_price,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_grs_amt * (1/v_mth_trans_conv_rt) * (v_phi_mth_conv_rt) * (var_tran_prim_uom_conv))) as phi_m_grs_prim_amt,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_grs_price * (1/v_mth_trans_conv_rt) * (v_phi_mth_conv_rt) * (var_tran_prim_uom_conv))) as phi_m_grs_prim_price,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_net_amt * (1/v_mth_trans_conv_rt) * (v_phi_mth_conv_rt) * (var_tran_prim_uom_conv))) as phi_m_net_prim_amt,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_net_price * (1/v_mth_trans_conv_rt) * (v_phi_mth_conv_rt) * (var_tran_prim_uom_conv))) as phi_m_net_prim_price,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_grs_amt * (1/v_mth_trans_conv_rt) * (v_mth_pcomp_conv_rt) * (var_tran_prim_uom_conv))) as pcomp_m_grs_prim_amt,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_grs_price * (1/v_mth_trans_conv_rt) * (v_mth_pcomp_conv_rt) * (var_tran_prim_uom_conv))) as pcomp_m_grs_prim_price,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_net_amt * (1/v_mth_trans_conv_rt) * (v_mth_pcomp_conv_rt) * (var_tran_prim_uom_conv))) as pcomp_m_net_prim_amt,
        iff(v_mth_trans_conv_rt=0 ,0,(trans_rpt_net_price * (1/v_mth_trans_conv_rt) * (v_mth_pcomp_conv_rt) * (var_tran_prim_uom_conv))) as pcomp_m_net_prim_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt)* (var_tran_kg_uom_conv)) as v_base_rpt_grs_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt)* (var_tran_kg_uom_conv)) as v_base_rpt_net_kg_price,
        v_base_rpt_grs_kg_price as base_rpt_grs_kg_price,
        v_base_rpt_net_kg_price as base_rpt_net_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt)* (var_tran_ca_uom_conv)) as v_base_rpt_grs_ca_price,
        v_base_rpt_grs_ca_price as base_rpt_grs_ca_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt)* (var_tran_ca_uom_conv)) as v_base_rpt_net_ca_price,
        v_base_rpt_net_ca_price as base_rpt_net_ca_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_kg_uom_conv)) as phi_rpt_grs_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_kg_uom_conv)) as phi_rpt_net_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_ca_uom_conv)) as phi_rpt_grs_ca_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt) * (v_phi_conv_rt) * (var_tran_ca_uom_conv)) as phi_rpt_net_ca_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_kg_uom_conv)) as pcomp_rpt_grs_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_kg_uom_conv)) as pcomp_rpt_net_kg_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_grs_price * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_ca_uom_conv)) as pcomp_rpt_grs_ca_price,
        iff(v_trans_conv_rt=0 ,0,trans_rpt_net_price * (1/v_trans_conv_rt) * (v_pcomp_conv_rt) * (var_tran_ca_uom_conv)) as pcomp_rpt_net_ca_price,
        v_trans_conv_rt as o_trans_conv_rt,
        'CA' as o_gross_weight_uom,
        coalesce(customer_po_number,null) as o_customer_po_number,
        v_transaction_quantity_uom as o_transaction_quantity_uom,
        v_base_rpt_grs_prim_amt as base_rpt_grs_prim_amt,
        v_phi_mth_conv_rt as mth_phi_conv_rt,
        v_net_kg_weight as net_kg_weight,
        sales_tran_quantity* var_tran_prim_uom_conv as sales_prim_quantity,
        sales_tran_quantity* var_tran_cwt_uom_conv as sales_cwt_quantity,
        sales_tran_quantity* var_tran_ca_uom_conv as sales_ca_quantity,
        sales_tran_quantity* var_tran_ul_uom_conv as sales_ul_quantity,
        sales_tran_quantity* var_tran_kg_uom_conv as sales_kg_quantity,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_01_amt* (1/v_trans_conv_rt)) as base_deduction_01_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_02_amt* (1/v_trans_conv_rt)) as base_deduction_02_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_03_amt* (1/v_trans_conv_rt)) as base_deduction_03_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_01_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as phi_deduction_01_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_02_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as phi_deduction_02_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_03_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as phi_deduction_03_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_01_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as pcomp_deduction_01_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_02_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as pcomp_deduction_02_amt,
        iff(v_trans_conv_rt=0 ,0,trans_deduction_03_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as pcomp_deduction_03_amt,
        trans_quantity_confirmed * var_tran_prim_uom_conv as prim_quantity_confirmed,
        trans_quantity_confirmed * var_tran_cwt_uom_conv as cwt_quantity_confirmed,
        trans_quantity_confirmed * var_tran_ul_uom_conv as ul_quantity_confirmed,
        trans_quantity_confirmed * var_tran_kg_uom_conv as kg_quantity_confirmed,
        trans_quantity_confirmed * var_tran_ca_uom_conv as ca_quantity_confirmed,
        iff(v_trans_conv_rt=0 ,0,trans_lineamount_confirmed* (1/v_trans_conv_rt)) as base_lineamount_confirmed,
        iff(v_trans_conv_rt=0 ,0,trans_lineamount_confirmed* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as phi_lineamount_confirmed,
        iff(v_trans_conv_rt=0 ,0,trans_lineamount_confirmed* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as pcomp_lineamount_confirmed,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_grs_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as o_phi_invoice_grs_amt,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_net_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as o_phi_invoice_net_amt,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_disc_amt* (1/v_trans_conv_rt) * (v_phi_conv_rt)) as o_phi_invoice_disc_amt,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_grs_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as o_pcomp_invoice_grs_amt,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_net_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as o_pcomp_invoice_net_amt,
        iff(v_trans_conv_rt=0 ,0,trans_invoice_disc_amt* (1/v_trans_conv_rt) * (v_pcomp_conv_rt)) as o_pcomp_invoice_disc_amt,
        iff(transaction_currency=v_base_currency,base_invoice_grs_amt, v_trans_conv_rt * base_invoice_grs_amt) as o_trans_invoice_grs_amt
    from uom_calc
),

pre_final as (
    select 
        source_system as source_system,
        sales_order_number as sales_order_number,
        source_sales_order_type as source_sales_order_type,
        o_sales_order_type as sales_order_type,
        sales_order_company as sales_order_company,
        sales_line_number as sales_line_number,
        source_employee_code as source_employee_code,
        null as employee_guid,
        source_line_type_code as source_line_type_code,
        o_line_type_code as line_type_code,
        o_line_type_desc as line_type_desc,
        line_status_code as line_status_code,
        o_line_status_desc as line_status_desc,
        ship_source_customer_code as ship_source_customer_code,
        ship_customer_address_guid as ship_customer_address_guid,
        bill_source_customer_code as bill_source_customer_code,
        bill_customer_address_guid as bill_customer_address_guid,
        ship_source_business_unit_code as ship_source_business_unit_code,
        ship_business_unit_guid as ship_business_unit_guid,
        null as default_company_code,
        source_item_identifier as source_item_identifier,
        item_guid as item_guid,
        division as division,
        org_unit_code as org_unit_code,
        invoice_document_company as invoice_document_company,
        null as invoice_document_number,
        invoice_document_type as invoice_document_type,
        o_source_location_code as source_location_code,
        null as location_guid,
        o_source_lot_code as source_lot_code,
        null as lot_guid,
        o_lot_status_code as lot_status_code,
        ordered_date as line_ordered_date,
        line_sch_pick_up_date as line_sch_pick_up_date,
        line_prom_ship_date as line_prom_ship_date,
        line_cancelled_date as line_cancelled_date,
        line_invoice_date as line_invoice_date,
        line_requested_date as line_requested_date,
        line_original_promised_date as line_original_promised_date,
        line_promised_delivery_date as line_promised_delivery_date,
        line_gl_date as line_gl_date,
        required_delivery_date as required_delivery_date,
        lead_time as lead_time,
        null as gl_offset_code,
        early_flag as early_flag,
        late_flag as late_flag,
        source_business_unit_code as source_business_unit_code,
        business_unit_address_guid as business_unit_address_guid,
        null as original_document_company,
        null as original_document_number,
        null as original_document_type,
        null as original_line_number,
        null as transfer_po_order_company,
        null as transfer_po_order_number,
        null as transfer_po_order_type,
        null as transfer_po_line_number,
        o_customer_po_number as customer_po_number,
        null as vendor_ref_code,
        kit_source_item_identifier as kit_source_item_identifier,
        kit1_item_guid as kit_item_guid,
        kit_line_number as kit_line_number,
        kit_component_number as kit_component_number,
        component_line_no as component_line_no,
        null as base_open_amt,
        price_override_flag as price_override_flag,
        cost_override_flag as cost_override_flag,
        source_payment_terms_code as source_payment_terms_code,
        payment_terms_guid as payment_terms_guid,
        source_payment_instr_code as source_payment_instr_code,
        target_payment_instr_code as target_payment_instr_code,
        payment_instr_desc as payment_instr_desc,
        null as price_adj_schd_code,
        null as item_price_grp_code,
        null as pick_slip_no,
        o_source_freight_handling_code as source_freight_handling_code,
        o_source_freight_handling_desc as source_freight_handling_desc,
        null as serial_no,
        null as basket_price_code,
        o_transaction_quantity_uom as transaction_quantity_uom,
        lkp_primary_uom as primary_uom,
        o_transaction_price_uom as transaction_price_uom,
        case_net_weight as unit_weight,
        'CA' as weight_uom,
        null as unit_volume,
        null as volume_uom,
        case_gross_weight as gross_weight,
        o_gross_weight_uom as gross_weight_uom,
        case_net_weight as net_weight,
        net_kg_weight as net_kg_weight,
        gross_kg_weight as gross_kg_weight,
        short_prim_quantity as short_prim_quantity,
        ordered_prim_quantity as ordered_prim_quantity,
        shipped_prim_quantity as shipped_prim_quantity,
        backorder_prim_quantity as backorder_prim_quantity,
        cancelled_prim_quantity as cancelled_prim_quantity,
        ordered_cwt_quantity as ordered_cwt_quantity,
        shipped_cwt_quantity as shipped_cwt_quantity,
        backord_cwt_quantity as backord_cwt_quantity,
        cancel_cwt_quantity as cancel_cwt_quantity,
        short_cwt_quantity as short_cwt_quantity,
        ordered_ca_quantity as ordered_ca_quantity,
        shipped_ca_quantity as shipped_ca_quantity,
        backord_ca_quantity as backord_ca_quantity,
        cancel_ca_quantity as cancel_ca_quantity,
        short_ca_quantity as short_ca_quantity,
        ordered_tran_quantity as ordered_tran_quantity,
        shipped_tran_quantity as shipped_tran_quantity,
        cancel_tran_quantity as cancel_tran_quantity,
        short_tran_quantity as short_tran_quantity,
        backord_tran_quantity as backord_tran_quantity,
        ordered_ul_quantity as ordered_ul_quantity,
        shipped_ul_quantity as shipped_ul_quantity,
        short_ul_quantity as short_ul_quantity,
        backord_ul_quantity as backord_ul_quantity,
        cancel_ul_quantity as cancel_ul_quantity,
        ordered_kg_quantity as ordered_kg_quantity,
        shipped_kg_quantity as shipped_kg_quantity,
        cancel_kg_quantity as cancel_kg_quantity,
        backord_kg_quantity as backord_kg_quantity,
        short_kg_quantity as short_kg_quantity,
        base_currency as base_currency,
        phi_currency as phi_currency,
        phi_conv_rt as phi_conv_rt,
        mth_phi_conv_rt as mth_phi_conv_rt,
        null as division_currency,
        pcomp_currency as pcomp_currency,
        pcomp_conv_rt as pcomp_conv_rt,
        mth_pcomp_conv_rt as mth_pcomp_conv_rt,
        base_unit_prim_price as base_unit_prim_price,
        base_list_prim_price as base_list_prim_price,
        base_extend_tran_price as base_extend_tran_price,
        base_unit_prim_cost as base_unit_prim_cost,
        base_extend_tran_cost as base_extend_tran_cost,
        base_rpt_grs_prim_price as base_rpt_grs_prim_price,
        base_rpt_grs_prim_amt as base_rpt_grs_prim_amt,
        base_rpt_net_prim_price as base_rpt_net_prim_price,
        base_rpt_net_prim_amt as base_rpt_net_prim_amt,
        phi_rpt_grs_prim_amt as phi_rpt_grs_prim_amt,
        phi_rpt_grs_prim_price as phi_rpt_grs_prim_price,
        phi_rpt_net_prim_amt as phi_rpt_net_prim_amt,
        phi_rpt_net_prim_price as phi_rpt_net_prim_price,
        pcomp_rpt_grs_prim_amt as pcomp_rpt_grs_prim_amt,
        pcomp_rpt_grs_prim_price as pcomp_rpt_grs_prim_price,
        pcomp_rpt_net_prim_amt as pcomp_rpt_net_prim_amt,
        pcomp_rpt_net_prim_price as pcomp_rpt_net_prim_price,
        phi_m_grs_prim_amt as phi_m_grs_prim_amt,
        phi_m_grs_prim_price as phi_m_grs_prim_price,
        phi_m_net_prim_amt as phi_m_net_prim_amt,
        phi_m_net_prim_price as phi_m_net_prim_price,
        pcomp_m_grs_prim_amt as pcomp_m_grs_prim_amt,
        pcomp_m_grs_prim_price as pcomp_m_grs_prim_price,
        pcomp_m_net_prim_amt as pcomp_m_net_prim_amt,
        pcomp_m_net_prim_price as pcomp_m_net_prim_price,
        base_rpt_grs_kg_price as base_rpt_grs_kg_price,
        base_rpt_net_kg_price as base_rpt_net_kg_price,
        base_rpt_grs_ca_price as base_rpt_grs_ca_price,
        base_rpt_net_ca_price as base_rpt_net_ca_price,
        phi_rpt_grs_kg_price as phi_rpt_grs_kg_price,
        phi_rpt_net_kg_price as phi_rpt_net_kg_price,
        phi_rpt_grs_ca_price as phi_rpt_grs_ca_price,
        phi_rpt_net_ca_price as phi_rpt_net_ca_price,
        pcomp_rpt_grs_kg_price as pcomp_rpt_grs_kg_price,
        pcomp_rpt_net_kg_price as pcomp_rpt_net_kg_price,
        pcomp_rpt_grs_ca_price as pcomp_rpt_grs_ca_price,
        pcomp_rpt_net_ca_price as pcomp_rpt_net_ca_price,
        source_foreign_conv_rt as source_foreign_conv_rt,
        o_source_updated_d_id as source_updated_d_id,
        source_updated_datetime as source_updated_time,
        short_reason_code as short_reason_code,
        short_reason_desc as short_reason_desc,
        null as bracket_price,
        null as list_price_uom,
        load_date as load_date,
        update_date as update_date,
        transaction_currency as transaction_currency,
        o_trans_conv_rt as trans_conv_rt,
        trans_rpt_grs_amt as trans_rpt_grs_amt,
        trans_rpt_grs_price as trans_rpt_grs_price,
        trans_rpt_net_amt as trans_rpt_net_amt,
        trans_rpt_net_price as trans_rpt_net_price,
        null as line_item_desc,
        open_prim_quantity as open_prim_quantity,
        open_cwt_quantity as open_cwt_quantity,
        open_tran_quantity as open_tran_quantity,
        open_ul_quantity as open_ul_quantity,
        open_kg_quantity as open_kg_quantity,
        mth_trans_conv_rt as mth_trans_conv_rt,
        trans_unit_tran_price as trans_unit_tran_price,
        trans_list_tran_price as trans_list_tran_price,
        trans_extend_tran_price as trans_extend_tran_price,
        tran_unit_tran_cost as tran_unit_tran_cost,
        trans_extend_tran_cost as trans_extend_tran_cost,
        trans_deduction_01_amt as trans_deduction_01_amt,
        trans_deduction_02_amt as trans_deduction_02_amt,
        trans_deduction_03_amt as trans_deduction_03_amt,
        sales_prim_quantity as sales_prim_quantity,
        sales_cwt_quantity as sales_cwt_quantity,
        sales_ca_quantity as sales_ca_quantity,
        sales_tran_quantity as sales_tran_quantity,
        sales_ul_quantity as sales_ul_quantity,
        sales_kg_quantity as sales_kg_quantity,
        line_actual_ship_date as line_actual_ship_date,
        edi_indicator as edi_indicator,
        base_deduction_01_amt as base_deduction_01_amt,
        base_deduction_02_amt as base_deduction_02_amt,
        base_deduction_03_amt as base_deduction_03_amt,
        phi_deduction_01_amt as phi_deduction_01_amt,
        phi_deduction_02_amt as phi_deduction_02_amt,
        phi_deduction_03_amt as phi_deduction_03_amt,
        pcomp_deduction_01_amt as pcomp_deduction_01_amt,
        pcomp_deduction_02_amt as pcomp_deduction_02_amt,
        pcomp_deduction_03_amt as pcomp_deduction_03_amt,
        cancel_reason_code as cancel_reason_code,
        cancel_reason_desc as cancel_reason_desc,
        trans_quantity_confirmed as trans_quantity_confirmed,
        trans_salesprice_confirmed as trans_salesprice_confirmed,
        trans_lineamount_confirmed as trans_lineamount_confirmed,
        trans_confirmdate_confirmed as trans_confirmdate_confirmed,
        o_trans_uom_confirmed as trans_uom_confirmed,
        trans_currency_confirmed as trans_currency_confirmed,
        prim_quantity_confirmed as prim_quantity_confirmed,
        cwt_quantity_confirmed as cwt_quantity_confirmed,
        ul_quantity_confirmed as ul_quantity_confirmed,
        kg_quantity_confirmed as kg_quantity_confirmed,
        ca_quantity_confirmed as ca_quantity_confirmed,
        base_lineamount_confirmed as base_lineamount_confirmed,
        phi_lineamount_confirmed as phi_lineamount_confirmed,
        pcomp_lineamount_confirmed as pcomp_lineamount_confirmed,
        null as source_account_identifier,
        source_object_id as source_object_id,
        cost_centre as cost_centre,
        null as account_guid,
        o_trans_invoice_grs_amt as trans_invoice_grs_amt,
        trans_invoice_net_amt as trans_invoice_net_amt,
        base_invoice_grs_amt as base_invoice_grs_amt,
        base_invoice_net_amt as base_invoice_net_amt,
        o_phi_invoice_grs_amt as phi_invoice_grs_amt,
        o_phi_invoice_net_amt as phi_invoice_net_amt,
        o_pcomp_invoice_grs_amt as pcomp_invoice_grs_amt,
        o_pcomp_invoice_net_amt as pcomp_invoice_net_amt,
        variant_code as variant_code,
        open_ca_quantity as open_ca_quantity,
        base_ext_ing_cost as base_ext_ing_cost,
        base_ext_pkg_cost as base_ext_pkg_cost,
        base_ext_lbr_cost as base_ext_lbr_cost,
        null as base_ext_boughtin_cost,
        base_ext_oth_cost as base_ext_oth_cost,
        null as base_ext_copack_cost,
        trans_invoice_disc_amt as trans_invoice_disc_amt,
        base_invoice_disc_amt as base_invoice_disc_amt,
        o_phi_invoice_disc_amt as phi_invoice_disc_amt,
        o_pcomp_invoice_disc_amt as pcomp_invoice_disc_amt,
        delivery_instruction as delivery_instruction,
        cust_order_number as cust_order_number,
        item_shelf_life as item_shelf_life,
        picking_route as picking_route,
        trans_line_requested_date as trans_line_requested_date,
        unique_key,
        var_tran_cwt_uom_conv,
        v_kg_conv,
        v_lb_conv,
        -- v_phi_conv_rt_max_date,
        v_fiscal_gl_date_no,
        line_gl_date_v2
    from rt_calc
),



final as (
    select 
        cast(substring(source_system,1,255) as text(255) ) as source_system  ,
        cast(substring(sales_line_number,1,255) as text(255) ) as sales_line_number  ,
        cast(substring(sales_order_number,1,255) as text(255) ) as sales_order_number  ,
        cast(substring(source_sales_order_type,1,30) as text(30) ) as source_sales_order_type  ,
        cast(substring(sales_order_type,1,30) as text(30) ) as sales_order_type  ,
        cast(substring(sales_order_company,1,20) as text(20) ) as sales_order_company  ,
        cast(substring(source_employee_code,1,255) as text(255) ) as source_employee_code  ,
        cast(employee_guid as text(255) ) as employee_guid  ,
        cast(substring(source_line_type_code,1,255) as text(255) ) as source_line_type_code  ,
        cast(substring(line_type_code,1,255) as text(255) ) as line_type_code  ,
        cast(substring(line_type_desc,1,255) as text(255) ) as line_type_desc  ,
        cast(line_status_code as number(38,0) ) as line_status_code  ,
        cast(substring(line_status_desc,1,255) as text(255) ) as line_status_desc  ,
        cast(substring(ship_source_customer_code,1,255) as text(255) ) as ship_source_customer_code  ,
        cast(ship_customer_address_guid as text(255) ) as ship_customer_address_guid  ,
        cast(substring(bill_source_customer_code,1,255) as text(255) ) as bill_source_customer_code  ,
        cast(bill_customer_address_guid as text(255) ) as bill_customer_address_guid  ,
        cast(substring(ship_source_business_unit_code,1,255) as text(255) ) as ship_source_business_unit_code  ,
        cast(ship_business_unit_guid as text(255) ) as ship_business_unit_guid  ,
        cast(substring(default_company_code,1,255) as text(255) ) as default_company_code  ,
        cast(substring(source_item_identifier,1,255) as text(255) ) as source_item_identifier  ,
        cast(item_guid as text(255) ) as item_guid  ,
        cast(substring(division,1,255) as text(255) ) as division  ,
        cast(substring(org_unit_code,1,255) as text(255) ) as org_unit_code  ,
        cast(substring(invoice_document_company,1,255) as text(255) ) as invoice_document_company  ,
        cast(substring(invoice_document_number,1,255) as text(255) ) as invoice_document_number  ,
        cast(substring(invoice_document_type,1,255) as text(255) ) as invoice_document_type  ,
        cast(substring(source_location_code,1,255) as text(255) ) as source_location_code  ,
        cast(location_guid as text(255) ) as location_guid  ,
        cast(substring(source_lot_code,1,255) as text(255) ) as source_lot_code  ,
        cast(lot_guid as text(255) ) as lot_guid  ,
        cast(substring(lot_status_code,1,255) as text(255) ) as lot_status_code  ,
        cast(line_ordered_date as timestamp_ntz(9) ) as line_ordered_date  ,
        cast(line_sch_pick_up_date as timestamp_ntz(9) ) as line_sch_pick_up_date  ,
        cast(line_prom_ship_date as timestamp_ntz(9) ) as line_prom_ship_date  ,
        cast(line_cancelled_date as timestamp_ntz(9) ) as line_cancelled_date  ,
        cast(line_invoice_date as timestamp_ntz(9) ) as line_invoice_date  ,
        cast(line_requested_date as timestamp_ntz(9) ) as line_requested_date  ,
        cast(line_original_promised_date as timestamp_ntz(9) ) as line_original_promised_date  ,
        cast(line_promised_delivery_date as timestamp_ntz(9) ) as line_promised_delivery_date  ,
        cast(line_gl_date as timestamp_ntz(9) ) as line_gl_date  ,
        cast(required_delivery_date as timestamp_ntz(9) ) as required_delivery_date  ,
        cast(lead_time as number(38,0) ) as lead_time  ,
        cast(substring(gl_offset_code,1,255) as text(255) ) as gl_offset_code  ,
        cast(substring(early_flag,1,255) as text(255) ) as early_flag  ,
        cast(substring(late_flag,1,255) as text(255) ) as late_flag  ,
        cast(substring(source_business_unit_code,1,255) as text(255) ) as source_business_unit_code  ,
        cast(business_unit_address_guid as text(255) ) as business_unit_address_guid  ,
        cast(substring(original_document_company,1,255) as text(255) ) as original_document_company  ,
        cast(substring(original_document_number,1,255) as text(255) ) as original_document_number  ,
        cast(substring(original_document_type,1,255) as text(255) ) as original_document_type  ,
        cast(substring(original_line_number,1,255) as text(255) ) as original_line_number  ,
        cast(substring(transfer_po_order_company,1,255) as text(255) ) as transfer_po_order_company  ,
        cast(substring(transfer_po_order_number,1,255) as text(255) ) as transfer_po_order_number  ,
        cast(substring(transfer_po_order_type,1,255) as text(255) ) as transfer_po_order_type  ,
        cast(substring(transfer_po_line_number,1,255) as text(255) ) as transfer_po_line_number  ,
        cast(substring(customer_po_number,1,255) as text(255) ) as customer_po_number  ,
        cast(substring(vendor_ref_code,1,255) as text(255) ) as vendor_ref_code  ,
        cast(substring(kit_source_item_identifier,1,255) as text(255) ) as kit_source_item_identifier  ,
        cast(kit_item_guid as text(255) ) as kit_item_guid  ,
        cast(substring(kit_line_number,1,255) as text(255) ) as kit_line_number  ,
        cast(substring(kit_component_number,1,255) as text(255) ) as kit_component_number  ,
        cast(substring(component_line_no,1,255) as text(255) ) as component_line_no  ,
        cast(base_open_amt as number(38,0) ) as base_open_amt  ,
        cast(substring(price_override_flag,1,4) as text(4) ) as price_override_flag  ,
        cast(substring(cost_override_flag,1,4) as text(4) ) as cost_override_flag  ,
        cast(substring(source_payment_terms_code,1,255) as text(255) ) as source_payment_terms_code  ,
        cast(payment_terms_guid as text(255) ) as payment_terms_guid  ,
        cast(substring(source_payment_instr_code,1,60) as text(60) ) as source_payment_instr_code  ,
        cast(substring(target_payment_instr_code,1,60) as text(60) ) as target_payment_instr_code  ,
        cast(substring(payment_instr_desc,1,255) as text(255) ) as payment_instr_desc  ,
        cast(substring(price_adj_schd_code,1,8) as text(8) ) as price_adj_schd_code  ,
        cast(substring(item_price_grp_code,1,30) as text(30) ) as item_price_grp_code  ,
        cast(substring(pick_slip_no,1,30) as text(30) ) as pick_slip_no  ,
        cast(substring(source_freight_handling_code,1,20) as text(20) ) as source_freight_handling_code  ,
        cast(substring(source_freight_handling_desc,1,255) as text(255) ) as source_freight_handling_desc  ,
        cast(substring(serial_no,1,30) as text(30) ) as serial_no  ,
        cast(substring(basket_price_code,1,30) as text(30) ) as basket_price_code  ,
        cast(substring(transaction_quantity_uom,1,15) as text(15) ) as transaction_quantity_uom  ,
        cast(substring(primary_uom,1,255) as text(255) ) as primary_uom  ,
        cast(substring(transaction_price_uom,1,255) as text(255) ) as transaction_price_uom  ,
        cast(unit_weight as number(38,0) ) as unit_weight  ,
        cast(substring(weight_uom,1,255) as text(255) ) as weight_uom  ,
        cast(unit_volume as number(38,0) ) as unit_volume  ,
        cast(substring(volume_uom,1,16) as text(16) ) as volume_uom  ,
        cast(gross_weight as number(38,10) ) as gross_weight  ,
        cast(substring(gross_weight_uom,1,15) as text(15) ) as gross_weight_uom  ,
        cast(net_weight as number(38,10) ) as net_weight  ,
        cast(net_kg_weight as number(38,10) ) as net_kg_weight  ,
        cast(gross_kg_weight as number(38,10) ) as gross_kg_weight  ,
        cast(short_prim_quantity as number(19,2) ) as short_prim_quantity  ,
        cast(ordered_prim_quantity as number(19,2) ) as ordered_prim_quantity  ,
        cast(shipped_prim_quantity as number(19,2) ) as shipped_prim_quantity  ,
        cast(backorder_prim_quantity as number(19,2) ) as backorder_prim_quantity  ,
        cast(cancelled_prim_quantity as number(19,2) ) as cancelled_prim_quantity  ,
        cast(ordered_cwt_quantity as number(19,2) ) as ordered_cwt_quantity  ,
        cast(shipped_cwt_quantity as number(19,2) ) as shipped_cwt_quantity  ,
        cast(backord_cwt_quantity as number(19,2) ) as backord_cwt_quantity  ,
        cast(cancel_cwt_quantity as number(19,2) ) as cancel_cwt_quantity  ,
        cast(short_cwt_quantity as number(19,2) ) as short_cwt_quantity  ,
        cast(ordered_ca_quantity as number(19,2) ) as ordered_ca_quantity  ,
        cast(shipped_ca_quantity as number(19,2) ) as shipped_ca_quantity  ,
        cast(backord_ca_quantity as number(19,2) ) as backord_ca_quantity  ,
        cast(cancel_ca_quantity as number(19,2) ) as cancel_ca_quantity  ,
        cast(short_ca_quantity as number(19,2) ) as short_ca_quantity  ,
        cast(ordered_tran_quantity as number(19,2) ) as ordered_tran_quantity  ,
        cast(shipped_tran_quantity as number(19,2) ) as shipped_tran_quantity  ,
        cast(cancel_tran_quantity as number(19,2) ) as cancel_tran_quantity  ,
        cast(short_tran_quantity as number(19,2) ) as short_tran_quantity  ,
        cast(backord_tran_quantity as number(19,2) ) as backord_tran_quantity  ,
        cast(ordered_ul_quantity as number(19,2) ) as ordered_ul_quantity  ,
        cast(shipped_ul_quantity as number(19,2) ) as shipped_ul_quantity  ,
        cast(short_ul_quantity as number(19,2) ) as short_ul_quantity  ,
        cast(backord_ul_quantity as number(19,2) ) as backord_ul_quantity  ,
        cast(cancel_ul_quantity as number(19,2) ) as cancel_ul_quantity  ,
        cast(ordered_kg_quantity as number(19,2) ) as ordered_kg_quantity  ,
        cast(shipped_kg_quantity as number(19,2) ) as shipped_kg_quantity  ,
        cast(cancel_kg_quantity as number(19,2) ) as cancel_kg_quantity  ,
        cast(backord_kg_quantity as number(19,2) ) as backord_kg_quantity  ,
        cast(short_kg_quantity as number(19,2) ) as short_kg_quantity  ,
        cast(substring(base_currency,1,6) as text(6) ) as base_currency  ,
        cast(substring(phi_currency,1,6) as text(6) ) as phi_currency  ,
        cast(phi_conv_rt as number(29,7) ) as phi_conv_rt  ,
        cast(mth_phi_conv_rt as number(29,7) ) as mth_phi_conv_rt  ,
        cast(substring(division_currency,1,6) as text(6) ) as division_currency  ,
        cast(substring(pcomp_currency,1,6) as text(6) ) as pcomp_currency  ,
        cast(pcomp_conv_rt as number(29,7) ) as pcomp_conv_rt  ,
        cast(mth_pcomp_conv_rt as number(29,7) ) as mth_pcomp_conv_rt  ,
        cast(base_unit_prim_price as number(21,4) ) as base_unit_prim_price  ,
        cast(base_list_prim_price as number(21,4) ) as base_list_prim_price  ,
        cast(base_extend_tran_price as number(21,4) ) as base_extend_tran_price  ,
        cast(base_unit_prim_cost as number(21,4) ) as base_unit_prim_cost  ,
        cast(base_extend_tran_cost as number(21,4) ) as base_extend_tran_cost  ,
        cast(base_rpt_grs_prim_price as number(21,4) ) as base_rpt_grs_prim_price  ,
        cast(base_rpt_grs_prim_amt as number(21,4) ) as base_rpt_grs_prim_amt  ,
        cast(base_rpt_net_prim_price as number(21,4) ) as base_rpt_net_prim_price  ,
        cast(base_rpt_net_prim_amt as number(21,4) ) as base_rpt_net_prim_amt  ,
        cast(phi_rpt_grs_prim_amt as number(21,4) ) as phi_rpt_grs_prim_amt  ,
        cast(phi_rpt_grs_prim_price as number(21,4) ) as phi_rpt_grs_prim_price  ,
        cast(phi_rpt_net_prim_amt as number(21,4) ) as phi_rpt_net_prim_amt  ,
        cast(phi_rpt_net_prim_price as number(21,4) ) as phi_rpt_net_prim_price  ,
        cast(pcomp_rpt_grs_prim_amt as number(21,4) ) as pcomp_rpt_grs_prim_amt  ,
        cast(pcomp_rpt_grs_prim_price as number(21,4) ) as pcomp_rpt_grs_prim_price  ,
        cast(pcomp_rpt_net_prim_amt as number(21,4) ) as pcomp_rpt_net_prim_amt  ,
        cast(pcomp_rpt_net_prim_price as number(21,4) ) as pcomp_rpt_net_prim_price  ,
        cast(phi_m_grs_prim_amt as number(21,4) ) as phi_m_grs_prim_amt  ,
        cast(phi_m_grs_prim_price as number(21,4) ) as phi_m_grs_prim_price  ,
        cast(phi_m_net_prim_amt as number(21,4) ) as phi_m_net_prim_amt  ,
        cast(phi_m_net_prim_price as number(21,4) ) as phi_m_net_prim_price  ,
        cast(pcomp_m_grs_prim_amt as number(21,4) ) as pcomp_m_grs_prim_amt  ,
        cast(pcomp_m_grs_prim_price as number(21,4) ) as pcomp_m_grs_prim_price  ,
        cast(pcomp_m_net_prim_amt as number(21,4) ) as pcomp_m_net_prim_amt  ,
        cast(pcomp_m_net_prim_price as number(21,4) ) as pcomp_m_net_prim_price  ,
        cast(base_rpt_grs_kg_price as number(21,4) ) as base_rpt_grs_kg_price  ,
        cast(base_rpt_net_kg_price as number(21,4) ) as base_rpt_net_kg_price  ,
        cast(base_rpt_grs_ca_price as number(21,4) ) as base_rpt_grs_ca_price  ,
        cast(base_rpt_net_ca_price as number(21,4) ) as base_rpt_net_ca_price  ,
        cast(phi_rpt_grs_kg_price as number(21,4) ) as phi_rpt_grs_kg_price  ,
        cast(phi_rpt_net_kg_price as number(21,4) ) as phi_rpt_net_kg_price  ,
        cast(phi_rpt_grs_ca_price as number(21,4) ) as phi_rpt_grs_ca_price  ,
        cast(phi_rpt_net_ca_price as number(21,4) ) as phi_rpt_net_ca_price  ,
        cast(pcomp_rpt_grs_kg_price as number(21,4) ) as pcomp_rpt_grs_kg_price  ,
        cast(pcomp_rpt_net_kg_price as number(21,4) ) as pcomp_rpt_net_kg_price  ,
        cast(pcomp_rpt_grs_ca_price as number(21,4) ) as pcomp_rpt_grs_ca_price  ,
        cast(pcomp_rpt_net_ca_price as number(21,4) ) as pcomp_rpt_net_ca_price  ,
        cast(source_foreign_conv_rt as number(38,0) ) as source_foreign_conv_rt  ,
        cast(source_updated_d_id as number(38,0) ) as source_updated_d_id  ,
        cast(source_updated_time as timestamp_ntz(9) ) as source_updated_time  ,
        cast(substring(short_reason_code,1,5) as text(5) ) as short_reason_code  ,
        cast(substring(short_reason_desc,1,6) as text(6) ) as short_reason_desc  ,
        cast(bracket_price as number(38,0) ) as bracket_price  ,
        cast(substring(list_price_uom,1,6) as text(6) ) as list_price_uom  ,
        cast(load_date as date) as load_date  ,
        cast(update_date as date) as update_date  ,
        cast(substring(transaction_currency,1,6) as text(6) ) as transaction_currency  ,
        cast(trans_conv_rt as number(38,10) ) as trans_conv_rt  ,
        cast(trans_rpt_grs_amt as number(38,10) ) as trans_rpt_grs_amt  ,
        cast(trans_rpt_grs_price as number(38,10) ) as trans_rpt_grs_price  ,
        cast(trans_rpt_net_amt as number(38,10) ) as trans_rpt_net_amt  ,
        cast(trans_rpt_net_price as number(38,10) ) as trans_rpt_net_price  ,
        cast(substring(line_item_desc,1,50) as text(50) ) as line_item_desc  ,
        cast(open_prim_quantity as number(19,2) ) as open_prim_quantity  ,
        cast(open_cwt_quantity as number(19,2) ) as open_cwt_quantity  ,
        cast(open_tran_quantity as number(19,2) ) as open_tran_quantity  ,
        cast(open_ul_quantity as number(19,2) ) as open_ul_quantity  ,
        cast(open_kg_quantity as number(19,2) ) as open_kg_quantity  ,
        cast(mth_trans_conv_rt as number(29,7) ) as mth_trans_conv_rt  ,
        cast(trans_unit_tran_price as number(21,4) ) as trans_unit_tran_price  ,
        cast(trans_list_tran_price as number(21,4) ) as trans_list_tran_price  ,
        cast(trans_extend_tran_price as number(21,4) ) as trans_extend_tran_price  ,
        cast(tran_unit_tran_cost as number(21,4) ) as tran_unit_tran_cost  ,
        cast(trans_extend_tran_cost as number(21,4) ) as trans_extend_tran_cost  ,
        cast(trans_deduction_01_amt as number(38,10) ) as trans_deduction_01_amt  ,
        cast(trans_deduction_02_amt as number(38,10) ) as trans_deduction_02_amt  ,
        cast(trans_deduction_03_amt as number(38,10) ) as trans_deduction_03_amt  ,
        cast(sales_prim_quantity as number(19,2) ) as sales_prim_quantity  ,
        cast(sales_cwt_quantity as number(19,2) ) as sales_cwt_quantity  ,
        cast(sales_ca_quantity as number(19,2) ) as sales_ca_quantity  ,
        cast(sales_tran_quantity as number(19,2) ) as sales_tran_quantity  ,
        cast(sales_ul_quantity as number(19,2) ) as sales_ul_quantity  ,
        cast(sales_kg_quantity as number(19,2) ) as sales_kg_quantity  ,
        cast(line_actual_ship_date as timestamp_ntz(9) ) as line_actual_ship_date  ,
        cast(substring(edi_indicator,1,1) as text(1) ) as edi_indicator  ,
        cast(base_deduction_01_amt as number(38,10) ) as base_deduction_01_amt  ,
        cast(base_deduction_02_amt as number(38,10) ) as base_deduction_02_amt  ,
        cast(base_deduction_03_amt as number(38,10) ) as base_deduction_03_amt  ,
        cast(phi_deduction_01_amt as number(38,10) ) as phi_deduction_01_amt  ,
        cast(phi_deduction_02_amt as number(38,10) ) as phi_deduction_02_amt  ,
        cast(phi_deduction_03_amt as number(38,10) ) as phi_deduction_03_amt  ,
        cast(pcomp_deduction_01_amt as number(38,10) ) as pcomp_deduction_01_amt  ,
        cast(pcomp_deduction_02_amt as number(38,10) ) as pcomp_deduction_02_amt  ,
        cast(pcomp_deduction_03_amt as number(38,10) ) as pcomp_deduction_03_amt  ,
        cast(substring(cancel_reason_code,1,10) as text(10) ) as cancel_reason_code  ,
        cast(substring(cancel_reason_desc,1,60) as text(60) ) as cancel_reason_desc  ,
        cast(trans_quantity_confirmed as number(38,10) ) as trans_quantity_confirmed  ,
        cast(trans_salesprice_confirmed as number(38,10) ) as trans_salesprice_confirmed  ,
        cast(trans_lineamount_confirmed as number(38,10) ) as trans_lineamount_confirmed  ,
        cast(trans_confirmdate_confirmed as date) as trans_confirmdate_confirmed  ,
        cast(substring(trans_uom_confirmed,1,20) as text(20) ) as trans_uom_confirmed  ,
        cast(substring(trans_currency_confirmed,1,20) as text(20) ) as trans_currency_confirmed  ,
        cast(prim_quantity_confirmed as number(38,10) ) as prim_quantity_confirmed  ,
        cast(cwt_quantity_confirmed as number(38,10) ) as cwt_quantity_confirmed  ,
        cast(ul_quantity_confirmed as number(38,10) ) as ul_quantity_confirmed  ,
        cast(kg_quantity_confirmed as number(38,10) ) as kg_quantity_confirmed  ,
        cast(ca_quantity_confirmed as number(38,10) ) as ca_quantity_confirmed  ,
        cast(base_lineamount_confirmed as number(38,10) ) as base_lineamount_confirmed  ,
        cast(phi_lineamount_confirmed as number(38,10) ) as phi_lineamount_confirmed  ,
        cast(pcomp_lineamount_confirmed as number(38,10) ) as pcomp_lineamount_confirmed  ,
        cast(substring(source_account_identifier,1,255) as text(255) ) as source_account_identifier  ,
        cast(substring(source_object_id,1,255) as text(255) ) as source_object_id  ,
        cast(substring(cost_centre,1,255) as text(255) ) as cost_centre  ,
        cast(account_guid as text(255) ) as account_guid  ,
        cast(trans_invoice_grs_amt as number(38,10) ) as trans_invoice_grs_amt  ,
        cast(trans_invoice_net_amt as number(38,10) ) as trans_invoice_net_amt  ,
        cast(base_invoice_grs_amt as number(38,10) ) as base_invoice_grs_amt  ,
        cast(base_invoice_net_amt as number(38,10) ) as base_invoice_net_amt  ,
        cast(phi_invoice_grs_amt as number(38,10) ) as phi_invoice_grs_amt  ,
        cast(phi_invoice_net_amt as number(38,10) ) as phi_invoice_net_amt  ,
        cast(pcomp_invoice_grs_amt as number(38,10) ) as pcomp_invoice_grs_amt  ,
        cast(pcomp_invoice_net_amt as number(38,10) ) as pcomp_invoice_net_amt  ,
        cast(substring(variant_code,1,255) as text(255) ) as variant_code  ,
        cast(open_ca_quantity as number(19,2) ) as open_ca_quantity  ,
        cast(base_ext_ing_cost as number(38,10) ) as base_ext_ing_cost  ,
        cast(base_ext_pkg_cost as number(38,10) ) as base_ext_pkg_cost  ,
        cast(base_ext_lbr_cost as number(38,10) ) as base_ext_lbr_cost  ,
        cast(base_ext_boughtin_cost as number(38,10) ) as base_ext_boughtin_cost  ,
        cast(base_ext_oth_cost as number(38,10) ) as base_ext_oth_cost  ,
        cast(base_ext_copack_cost as number(38,10) ) as base_ext_copack_cost  ,
        cast(trans_invoice_disc_amt as number(38,10) ) as trans_invoice_disc_amt  ,
        cast(base_invoice_disc_amt as number(38,10) ) as base_invoice_disc_amt  ,
        cast(phi_invoice_disc_amt as number(38,10) ) as phi_invoice_disc_amt  ,
        cast(pcomp_invoice_disc_amt as number(38,10) ) as pcomp_invoice_disc_amt  ,
        cast(substring(delivery_instruction,1,255) as text(255) ) as delivery_instruction  ,
        cast(substring(cust_order_number,1,30) as text(30) ) as cust_order_number  ,
        cast(item_shelf_life as number(38,0) ) as item_shelf_life  ,
        cast(substring(picking_route,1,10) as text(10) ) as picking_route  ,
        cast(trans_line_requested_date as date) as trans_line_requested_date  ,
        cast(unique_key as text(255) ) as unique_key,
        var_tran_cwt_uom_conv,
        v_kg_conv,
        v_lb_conv,
        -- v_phi_conv_rt_max_date,
        v_fiscal_gl_date_no,
        line_gl_date_v2
    from pre_final

)

select * from final
