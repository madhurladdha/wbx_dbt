{{ config(materialized=env_var("DBT_MAT_VIEW"), tags=["sales","accuracy","sales_accuracy"]) }}

with cte_sls_wtx_slsorder_fact as (select * from {{ ref('fct_wbx_sls_order') }}),
cte_customer_ext as (select * from {{ ref('dim_wbx_customer_ext') }}),
cte_forecast_hist as (select * from {{ ref('fct_wbx_sls_forecast_hist') }}),
--changed from src_sls_wtx_lkp_snapshot_date to stg_d_wtx_lkp_snapshot_date
cte_SLS_WTX_LKP_SNAPSHOT_DATE as (select * from {{ ref('stg_d_wtx_lkp_snapshot_date') }}),
cte_sls_wtx_fc_snapshot_dim as (select * from {{ ref('dim_wbx_fc_snapshot') }}),
cte_DIM_DATE as (select * from {{ ref('src_dim_date') }}),
cte_planning_date_oc as (select * from {{ ref('dim_wbx_planning_date_oc') }}),
cte_DIM_DATE_oc as (select * from {{ ref('dim_wbx_date_oc') }}),
cte_item_ext as (select * from {{ ref('dim_wbx_item_ext') }}),
cte_sls_wtx_mape_targets as (select * from {{ ref('src_sls_wtx_mape_targets') }}),
cte_v_wtx_cust_planning as --cte for the view POSTSNOWP.EI_RDM.v_wtx_cust_planning
(
    select * from {{ref('dim_wbx_cust_planning')}}
),
ACTUALS_DATA_SET AS (
SELECT 'ACTUALS' AS SOURCE_CONTENT_FILTER,
NULL AS SNAPSHOT_DATE,
COALESCE (TO_DATE(LINE_ACTUAL_SHIP_DATE), TO_DATE(LINE_INVOICE_DATE), TO_DATE(LINE_GL_DATE), TO_DATE(LINE_CANCELLED_DATE), TO_DATE(LINE_REQUESTED_DATE), TO_DATE(LINE_ORDERED_DATE)) AS CALENDAR_DATE,
UB.SOURCE_ITEM_IDENTIFIER AS SOURCE_ITEM_IDENTIFIER,
CUST_EXT.TRADE_TYPE_CODE AS TRADE_TYPE_CODE,
CUST_EXT.TRADE_TYPE_DESC AS TRADE_TYPE_DESC,
UB.BASE_CURRENCY AS BASE_CURRENCY,
UB.TRANSACTION_CURRENCY AS TRANSACTION_CURRENCY,
UB.TRANS_CONFIRMDATE_CONFIRMED AS CY_CONFIRMDATE_ORIGINAL, 
UB.SALES_ORDER_COMPANY AS DOCUMENT_COMPANY, 
COALESCE (UB.TRANS_LINE_REQUESTED_DATE, UB.LINE_SCH_PICK_UP_DATE, TO_DATE(LINE_ACTUAL_SHIP_DATE), TO_DATE(LINE_INVOICE_DATE), 
            TO_DATE(LINE_GL_DATE), TO_DATE(LINE_CANCELLED_DATE), TO_DATE(LINE_REQUESTED_DATE), TO_DATE(LINE_ORDERED_DATE)) AS ORIGINAL_REQUESTED_SHIP_DT,
SUM(UB.ORDERED_CA_QUANTITY) AS CY_ORDERED_CA_QUANTITY,
SUM(UB.ORDERED_KG_QUANTITY) AS CY_ORDERED_KG_QUANTITY,
SUM(UB.ORDERED_UL_QUANTITY) AS CY_ORDERED_UL_QUANTITY,
SUM(UB.SHIPPED_CA_QUANTITY) AS CY_SHIPPED_CA_QUANTITY,
SUM(UB.SHIPPED_KG_QUANTITY) AS CY_SHIPPED_KG_QUANTITY,
SUM(UB.SHIPPED_UL_QUANTITY) AS CY_SHIPPED_UL_QUANTITY,
SUM(NVL(UB.TRANS_QUANTITY_CONFIRMED,0)) AS CY_TRANS_QUANTITY_ORIGINAL,
SUM(NVL(UB.PRIM_QUANTITY_CONFIRMED,0)) AS CY_PRIM_QUANTITY_ORIGINAL,
SUM(NVL(UB.CWT_QUANTITY_CONFIRMED,0)) AS CY_CWT_QUANTITY_ORIGINAL,
SUM(NVL(UB.UL_QUANTITY_CONFIRMED,0)) AS CY_UL_QUANTITY_ORIGINAL,
SUM(NVL(UB.KG_QUANTITY_CONFIRMED,0)) AS CY_KG_QUANTITY_ORIGINAL,
SUM(NVL(UB.CA_QUANTITY_CONFIRMED,0)) AS CY_CA_QUANTITY_ORIGINAL
FROM cte_sls_wtx_slsorder_fact UB
LEFT JOIN cte_customer_ext CUST_EXT
    ON --UB.SOURCE_SYSTEM = CUST_EXT.SOURCE_SYSTEM
     UB.SHIP_CUSTOMER_ADDRESS_GUID = CUST_EXT.CUSTOMER_ADDRESS_NUMBER_GUID
  --  AND NVL(UB.SALES_ORDER_COMPANY,'WBX') = CUST_EXT.COMPANY_CODE
	
/*WHERE SOURCE_CONTENT_FILTER = 'ACTUALS'  --Removed where clause as part of ticket WBXPRODSUP-311
  AND CALENDAR_DATE >= DATE_TRUNC('MONTH',DATEADD('MONTH',-24,CURRENT_DATE))
  AND CALENDAR_DATE <= (SELECT SNAPSHOT_DATE FROM R_EI_SYSADM.SLS_WTX_LKP_SNAPSHOT_DATE) */ where NVL(COST_CENTRE,0) <> 6700
GROUP BY 1,2,3,4,5,6,7,8,9,10,11
),

FORECAST_DATA_SET AS (
SELECT 'FORECAST' AS SOURCE_CONTENT_FILTER,
FC.SNAPSHOT_DATE AS SNAPSHOT_DATE,
FC.CALENDAR_DATE AS CALENDAR_DATE,
FC.SOURCE_ITEM_IDENTIFIER AS SOURCE_ITEM_IDENTIFIER,
PLAN.TRADE_TYPE_CODE AS TRADE_TYPE_CODE,
PLAN.TRADE_TYPE AS TRADE_TYPE_DESC,
SUM(COALESCE(FC.FCF_TOT_VOL_KG,FC.TOT_VOL_KG,0)) AS FCF_TOT_VOL_KG,    ---Forecast Total Volume (KG)
SUM(COALESCE(FC.FCF_TOT_VOL_CA,FC.TOT_VOL_CA,0)) AS FCF_TOT_VOL_CA,    ---Forecast Total Volume (Cases)
SUM(COALESCE(FC.FCF_TOT_VOL_UL,FC.TOT_VOL_UL,0)) AS FCF_TOT_VOL_UL,    ---Forecast Total Volume (Pallets)

SUM(FC.FCF_BASE_VOL_KG) AS FCF_BASE_VOL_KG,    
SUM(FC.FCF_BASE_VOL_CA) AS FCF_BASE_VOL_CA,    
SUM(FC.FCF_BASE_VOL_UL) AS FCF_BASE_VOL_UL

FROM cte_forecast_hist FC
JOIN (SELECT MAX(SNAPSHOT_DATE) AS SNAPSHOT_DATE FROM cte_SLS_WTX_LKP_SNAPSHOT_DATE) SNSHT
  ON 1=1
   --HJ 14 sep 2021,WBXPRODSUP 175 rewritten the below join with snaoshot dim
  LEFT JOIN 
(select * from (SELECT SOURCE_SYSTEM,SNAPSHOT_DATE,SNAPSHOT_MODEL,SNAPSHOT_CODE,SNAPSHOT_TYPE,
RANK () OVER ( 
PARTITION BY SOURCE_SYSTEM,SNAPSHOT_DATE,SNAPSHOT_MODEL,SNAPSHOT_CODE
ORDER BY SNAPSHOT_TYPE ASC
) RANK_NO 
FROM cte_sls_wtx_fc_snapshot_dim) where RANK_NO=1) D
ON FC.SNAPSHOT_DATE = D.SNAPSHOT_DATE
  LEFT JOIN cte_v_wtx_cust_planning PLAN
    ON TRIM(FC.PLAN_SOURCE_CUSTOMER_CODE) = TRIM(PLAN.TRADE_TYPE_CODE)
    and PLAN.COMPANY_CODE='WBX'
WHERE FC.SNAPSHOT_DATE > '2021-03-12'
  AND (FC.SNAPSHOT_DATE = SNSHT.snapshot_Date       
--HJ 13 sep 2021,WBXPRODSUP175..need to go 420 days back for month end
OR (D.SNAPSHOT_TYPE = 'MONTH_END')
OR (D.SNAPSHOT_TYPE = 'WEEK_END')
      )
GROUP BY 1,2,3,4,5,6
),

COMBINED_SET AS (
SELECT
'{{env_var('DBT_SOURCE_SYSTEM')}}' AS SOURCE_SYSTEM,
ADS.SOURCE_ITEM_IDENTIFIER,
ADS.TRADE_TYPE_CODE,
ADS.TRADE_TYPE_DESC,
ADS.CALENDAR_DATE,
ADS.SNAPSHOT_DATE,
ADS.SOURCE_CONTENT_FILTER,
ADS.BASE_CURRENCY,
ADS.TRANSACTION_CURRENCY,
ADS.ORIGINAL_REQUESTED_SHIP_DT,
ADS.CY_ORDERED_CA_QUANTITY,
ADS.CY_SHIPPED_CA_QUANTITY,
ADS.CY_ORDERED_UL_QUANTITY,
ADS.CY_SHIPPED_UL_QUANTITY,
ADS.CY_ORDERED_KG_QUANTITY,
ADS.CY_SHIPPED_KG_QUANTITY,
ADS.CY_TRANS_QUANTITY_ORIGINAL,
ADS.CY_PRIM_QUANTITY_ORIGINAL,
ADS.CY_CWT_QUANTITY_ORIGINAL,
ADS.CY_UL_QUANTITY_ORIGINAL,
ADS.CY_KG_QUANTITY_ORIGINAL, 
ADS.CY_CA_QUANTITY_ORIGINAL,
ADS.CY_CONFIRMDATE_ORIGINAL,
0 AS FCF_TOT_VOL_KG,
0 FCF_TOT_VOL_CA,
0 AS FCF_TOT_VOL_UL,
0 as FCF_BASE_VOL_KG,    
0 as FCF_BASE_VOL_CA,    
0 as FCF_BASE_VOL_UL, 
ADS.DOCUMENT_COMPANY
FROM ACTUALS_DATA_SET ADS

UNION

SELECT
'{{env_var('DBT_SOURCE_SYSTEM')}}' AS SOURCE_SYSTEM,
FDS.SOURCE_ITEM_IDENTIFIER,
FDS.TRADE_TYPE_CODE AS TRADE_TYPE_CODE,
FDS.TRADE_TYPE_DESC AS TRADE_TYPE_DESC,
FDS.CALENDAR_DATE,
FDS.SNAPSHOT_DATE,
FDS.SOURCE_CONTENT_FILTER,
'GBP' AS BASE_CURRENCY,
'GBP' AS TRANSACTION_CURRENCY,
FDS.CALENDAR_DATE AS ORIGINAL_REQUESTED_SHIP_DT,
0 AS CY_ORDERED_CA_QUANTITY,
0 AS CY_SHIPPED_CA_QUANTITY,
0 AS CY_ORDERED_UL_QUANTITY,
0 AS CY_SHIPPED_UL_QUANTITY,
0 AS CY_ORDERED_KG_QUANTITY,
0 AS CY_SHIPPED_KG_QUANTITY,
0 AS CY_TRANS_QUANTITY_ORIGINAL,
0 AS CY_PRIM_QUANTITY_ORIGINAL,
0 AS CY_CWT_QUANTITY_ORIGINAL,
0 AS CY_UL_QUANTITY_ORIGINAL,
0 AS CY_KG_QUANTITY_ORIGINAL, 
0 AS CY_CA_QUANTITY_ORIGINAL,
NULL AS CY_CONFIRMDATE_ORIGINAL,
FDS.FCF_TOT_VOL_KG AS FCF_TOT_VOL_KG,
FDS.FCF_TOT_VOL_CA AS FCF_TOT_VOL_CA,
FDS.FCF_TOT_VOL_UL AS FCF_TOT_VOL_UL,

FDS.FCF_BASE_VOL_KG as FCF_BASE_VOL_KG,    
FDS.FCF_BASE_VOL_CA as FCF_BASE_VOL_CA,    
FDS.FCF_BASE_VOL_UL as FCF_BASE_VOL_UL, 
'WBX' AS DOCUMENT_COMPANY
FROM FORECAST_DATA_SET FDS
),
cte_final as 
(
SELECT
UB.SOURCE_SYSTEM AS SOURCE_SYSTEM,
UB.SOURCE_ITEM_IDENTIFIER,
TRIM(PLAN.TRADE_TYPE_CODE) AS PLAN_SOURCE_CUSTOMER_CODE,
UB.CALENDAR_DATE,
DT.REPORT_FISCAL_YEAR_PERIOD_NO AS FISCAL_PERIOD_NUMBER,
UB.SNAPSHOT_DATE AS SNAPSHOT_FORECAST_DATE,
//ITM_EXT.PRIMARY_UOM AS PRIMARY_UOM,
UB.SOURCE_CONTENT_FILTER,
UB.BASE_CURRENCY,
UB.TRANSACTION_CURRENCY,
UB.CY_ORDERED_CA_QUANTITY,
UB.CY_SHIPPED_CA_QUANTITY,
UB.CY_ORDERED_UL_QUANTITY,
UB.CY_SHIPPED_UL_QUANTITY,
UB.CY_ORDERED_KG_QUANTITY,
UB.CY_SHIPPED_KG_QUANTITY,
UB.CY_ORDERED_CA_QUANTITY * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS CY_ORDERED_PK_QUANTITY,
UB.CY_SHIPPED_CA_QUANTITY * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS CY_SHIPPED_PK_QUANTITY,
UB.CY_ORDERED_CA_QUANTITY * ITM_EXT.CONSUMER_UNITS AS CY_ORDERED_CU_QUANTITY,
UB.CY_SHIPPED_CA_QUANTITY * ITM_EXT.CONSUMER_UNITS AS CY_SHIPPED_CU_QUANTITY,
---Sales Order Original Order Quantities - added 13-May-2021---
UB.CY_TRANS_QUANTITY_ORIGINAL,
UB.CY_PRIM_QUANTITY_ORIGINAL,
UB.CY_CWT_QUANTITY_ORIGINAL,
UB.CY_UL_QUANTITY_ORIGINAL,
UB.CY_KG_QUANTITY_ORIGINAL, 
UB.CY_CA_QUANTITY_ORIGINAL,
UB.CY_CA_QUANTITY_ORIGINAL * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS CY_PK_QUANTITY_ORIGINAL,
UB.CY_CA_QUANTITY_ORIGINAL * ITM_EXT.CONSUMER_UNITS AS CY_CU_QUANTITY_ORIGINAL,
UB.CY_CONFIRMDATE_ORIGINAL,
---Sales Order Original Order Quantities - End---
-----Calculated Forecast Output for Base + Promo Uplift + Override Incremental = TOTAL
UB.FCF_TOT_VOL_KG AS FCF_TOT_VOL_KG,    ---Forecast Total Volume (KG); Override when applicable
UB.FCF_TOT_VOL_CA AS FCF_TOT_VOL_CA,    ---Forecast Total Volume (Cases); Override when applicable
UB.FCF_TOT_VOL_UL AS FCF_TOT_VOL_UL,    ---Forecast Total Volume (Pallets); Override when applicable
UB.FCF_TOT_VOL_CA * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS FCF_TOT_VOL_PK,  ---Forecast Total Volume (Packs); Override when applicable
UB.FCF_TOT_VOL_CA * ITM_EXT.CONSUMER_UNITS AS FCF_TOT_VOL_CU,  ---Forecast Total Volume (Consumer Units); Override when applicable

UB.FCF_BASE_VOL_KG AS FCF_BASE_VOL_KG,    ---Forecast Base Volume (KG)
UB.FCF_BASE_VOL_CA AS FCF_BASE_VOL_CA,    ---Forecast Base Volume (Cases)
UB.FCF_BASE_VOL_UL AS FCF_BASE_VOL_UL,    ---Forecast Base Volume (Pallets)
UB.FCF_BASE_VOL_CA * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS FCF_BASE_VOL_PK,  ---Forecast Base Volume (Packs)
UB.FCF_BASE_VOL_CA * ITM_EXT.CONSUMER_UNITS AS FCF_BASE_VOL_CU,  ---Forecast Base Volume (Consumer Units)

/*
UB.FCF_TOT_VOL_KG - UB.FCV_QTY_KG_EFFECTIVE_BASE_FC_SI AS FCF_PROMO_VOL_KG,    ---Forecast Promo Uplift Volume (KG)
UB.FCF_TOT_VOL_CA - UB.FCV_QTY_CA_EFFECTIVE_BASE_FC_SI AS FCF_PROMO_VOL_CA,    ---Forecast Promo Uplift Volume (Cases)
UB.FCF_TOT_VOL_UL - UB.FCV_QTY_UL_EFFECTIVE_BASE_FC_SI AS FCF_PROMO_VOL_UL,    ---Forecast Promo Uplift Volume (Pallets)
(UB.FCF_TOT_VOL_CA - UB.FCV_QTY_CA_EFFECTIVE_BASE_FC_SI) * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS FCF_PROMO_VOL_PK,    ---Forecast Promo Uplift Volume (Packs)
(UB.FCF_TOT_VOL_CA - UB.FCV_QTY_CA_EFFECTIVE_BASE_FC_SI) * ITM_EXT.CONSUMER_UNITS AS FCF_PROMO_VOL_CU,    ---Forecast Promo Uplift Volume (Consumer Units)
UB.FCF_OVER_VOL_KG AS FCF_OVER_VOL_KG,    ---Forecast Override Volume (KG)
UB.FCF_OVER_VOL_CA AS FCF_OVER_VOL_CA,    ---Forecast Override Volume (Cases)
UB.FCF_OVER_VOL_UL AS FCF_OVER_VOL_UL,    ---Forecast Override Volume (Pallets)
UB.FCF_OVER_VOL_CA * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS FCF_OVER_VOL_PK,    ---Forecast Override Volume (Packs)
UB.FCF_OVER_VOL_CA * ITM_EXT.CONSUMER_UNITS AS FCF_OVER_VOL_CU,    ---Forecast Override Volume (Consumer Units)
UB.FCF_TOT_ORIG_VOL_KG AS FCF_TOT_ORIG_VOL_KG,    ---Forecast Override Volume (KG)
UB.FCF_TOT_ORIG_VOL_CA AS FCF_TOT_ORIG_VOL_CA,    ---Forecast Override Volume (Cases)
UB.FCF_TOT_ORIG_VOL_UL AS FCF_TOT_ORIG_VOL_UL,    ---Forecast Override Volume (Pallets)
UB.FCF_TOT_ORIG_VOL_CA * ITM_EXT.CONSUMER_UNITS_IN_TRADE_UNITS AS FCF_TOT_ORIG_VOL_PK,    ---Forecast Override Volume (Packs)
UB.FCF_TOT_ORIG_VOL_CA * ITM_EXT.CONSUMER_UNITS AS FCF_TOT_ORIG_VOL_CU,    ---Forecast Override Volume (Consumer Units)
*/
--Added for Forecast above---------------
DT.REPORT_FISCAL_YEAR,
DT.REPORT_FISCAL_YEAR_PERIOD_NO,
DT.FISCAL_YEAR_BEGIN_DT,
DT.FISCAL_YEAR_END_DT,
DD_OC.UK_HOLIDAY_FLAG,
DD_OC.DAY_OF_MONTH_BUSINESS,
DD_OC.DAY_OF_MONTH_ACTUAL,
DTP.PLANNING_WEEK_CODE,
DTP.PLANNING_WEEK_START_DT,
DTP.PLANNING_WEEK_END_DT,
DTP.PLANNING_WEEK_NO,
DTP.PLANNING_MONTH_CODE,
DTP.PLANNING_MONTH_START_DT,
DTP.PLANNING_MONTH_END_DT,
DTP.PLANNING_QUARTER_NO,
DTP.PLANNING_QUARTER_START_DT,
DTP.PLANNING_QUARTER_END_DT,
DTP.PLANNING_YEAR_NO,
DTP.PLANNING_YEAR_START_DT,
DTP.PLANNING_YEAR_END_DT,
PLAN.MARKET AS MARKET,
PLAN.SUB_MARKET AS SUBMARKET,
PLAN.TRADE_CLASS AS TRADE_CLASS,
PLAN.TRADE_GROUP AS TRADE_GROUP,
PLAN.TRADE_TYPE AS TRADE_TYPE,
PLAN.TRADE_SECTOR_DESC AS TRADE_SECTOR,
ITM_EXT.DESCRIPTION,
ITM_EXT.ITEM_TYPE, 
ITM_EXT.BRANDING_DESC, 
ITM_EXT.PRODUCT_CLASS_DESC, 
ITM_EXT.SUB_PRODUCT_DESC, 
ITM_EXT.STRATEGIC_DESC, 
ITM_EXT.POWER_BRAND_DESC, 
ITM_EXT.MANUFACTURING_GROUP_DESC, 
ITM_EXT.CATEGORY_DESC, 
ITM_EXT.PACK_SIZE_DESC, 
ITM_EXT.SUB_CATEGORY_DESC,
ITM_EXT.PROMO_TYPE_DESC,
NVL(ITM_EXT.DUMMY_PRODUCT_FLAG,0) AS DUMMY_PRODUCT_FLAG,
UB.DOCUMENT_COMPANY AS COMPANY,
UB.ORIGINAL_REQUESTED_SHIP_DT AS ORIGINAL_REQUESTED_SHIP_DT, 
MAPE_TGT.TGT_MAPE AS TGT_MAPE,
MAPE_TGT.TGT_BIAS AS TGT_BIAS,
DTP_OR.PLANNING_WEEK_CODE AS OR_PLANNING_WEEK_CODE,
DTP_OR.PLANNING_WEEK_START_DT AS OR_PLANNING_WEEK_START_DT,
DTP_OR.PLANNING_WEEK_END_DT AS OR_PLANNING_WEEK_END_DT,
DTP_OR.PLANNING_WEEK_NO AS OR_PLANNING_WEEK_NO,
DTP_OR.PLANNING_MONTH_CODE AS OR_PLANNING_MONTH_CODE,
DTP_OR.PLANNING_MONTH_START_DT AS OR_PLANNING_MONTH_START_DT,
DTP_OR.PLANNING_MONTH_END_DT AS OR_PLANNING_MONTH_END_DT,
DTP_OR.PLANNING_QUARTER_NO AS OR_PLANNING_QUARTER_NO,
DTP_OR.PLANNING_QUARTER_START_DT AS OR_PLANNING_QUARTER_START_DT,
DTP_OR.PLANNING_QUARTER_END_DT AS OR_PLANNING_QUARTER_END_DT,
DTP_OR.PLANNING_YEAR_NO AS OR_PLANNING_YEAR_NO,
DTP_OR.PLANNING_YEAR_START_DT AS OR_PLANNING_YEAR_START_DT,
DTP_OR.PLANNING_YEAR_END_DT AS OR_PLANNING_YEAR_END_DT

FROM COMBINED_SET UB
LEFT JOIN cte_DIM_DATE DT
    ON UB.CALENDAR_DATE = DT.CALENDAR_DATE
LEFT JOIN cte_planning_date_oc DTP
    ON UB.SOURCE_SYSTEM = DTP.SOURCE_SYSTEM
    AND UB.CALENDAR_DATE = DTP.CALENDAR_DATE
LEFT JOIN cte_planning_date_oc DTP_OR
    ON UB.SOURCE_SYSTEM=DTP_OR.SOURCE_SYSTEM   
    AND UB.ORIGINAL_REQUESTED_SHIP_DT = DTP_OR.CALENDAR_DATE   
LEFT JOIN cte_DIM_DATE_oc DD_OC
    ON UB.SOURCE_SYSTEM = DD_OC.SOURCE_SYSTEM
    AND UB.CALENDAR_DATE = DD_OC.CALENDAR_DATE
LEFT JOIN (SELECT SOURCE_SYSTEM, SOURCE_ITEM_IDENTIFIER, MAX(DUMMY_PRODUCT_FLAG) AS DUMMY_PRODUCT_FLAG, MAX(ITEM_TYPE) AS ITEM_TYPE, MAX(BRANDING_DESC) AS BRANDING_DESC, MAX(PRODUCT_CLASS_DESC) AS PRODUCT_CLASS_DESC, MAX(SUB_PRODUCT_DESC) AS SUB_PRODUCT_DESC
            , MAX(STRATEGIC_DESC) AS STRATEGIC_DESC, MAX(POWER_BRAND_DESC) AS POWER_BRAND_DESC, MAX(MANUFACTURING_GROUP_DESC) AS MANUFACTURING_GROUP_DESC
            , MAX(CATEGORY_DESC) AS CATEGORY_DESC, MAX(PACK_SIZE_DESC) AS PACK_SIZE_DESC, MAX(SUB_CATEGORY_DESC) AS SUB_CATEGORY_DESC
            , MAX(CONSUMER_UNITS_IN_TRADE_UNITS) AS CONSUMER_UNITS_IN_TRADE_UNITS, MAX(PROMO_TYPE_DESC) AS PROMO_TYPE_DESC, MAX(CONSUMER_UNITS) AS CONSUMER_UNITS
			, MAX(DESCRIPTION) AS DESCRIPTION
            FROM cte_item_ext
            GROUP BY SOURCE_SYSTEM, SOURCE_ITEM_IDENTIFIER) ITM_EXT 
    ON UB.SOURCE_SYSTEM = ITM_EXT.SOURCE_SYSTEM
    AND UB.SOURCE_ITEM_IDENTIFIER = ITM_EXT.SOURCE_ITEM_IDENTIFIER
LEFT JOIN cte_v_wtx_cust_planning PLAN
    ON TRIM(UB.TRADE_TYPE_CODE) = TRIM(PLAN.TRADE_TYPE_CODE)
    and ub.DOCUMENT_COMPANY=plan.company_code
---Start MAPE Targets-----------------------------------------------------------------
LEFT JOIN cte_sls_wtx_mape_targets MAPE_TGT
    ON TRIM(UB.TRADE_TYPE_CODE) = TRIM(MAPE_TGT.TRADE_TYPE_CODE)
    AND UB.CALENDAR_DATE BETWEEN MAPE_TGT.EFF_DATE AND MAPE_TGT.EXPIR_DATE
---End MAPE Targets-----------------------------------------------------------------
)
select 
    SOURCE_SYSTEM,
	SOURCE_ITEM_IDENTIFIER,
	PLAN_SOURCE_CUSTOMER_CODE,
	CALENDAR_DATE,
	FISCAL_PERIOD_NUMBER,
	SNAPSHOT_FORECAST_DATE,
	SOURCE_CONTENT_FILTER,
	BASE_CURRENCY,
	TRANSACTION_CURRENCY,
	CY_ORDERED_CA_QUANTITY,
	CY_SHIPPED_CA_QUANTITY,
	CY_ORDERED_UL_QUANTITY,
	CY_SHIPPED_UL_QUANTITY,
	CY_ORDERED_KG_QUANTITY,
	CY_SHIPPED_KG_QUANTITY,
	CY_ORDERED_PK_QUANTITY,
	CY_SHIPPED_PK_QUANTITY,
	CY_ORDERED_CU_QUANTITY,
	CY_SHIPPED_CU_QUANTITY,
	CY_TRANS_QUANTITY_ORIGINAL,
	CY_PRIM_QUANTITY_ORIGINAL,
	CY_CWT_QUANTITY_ORIGINAL,
	CY_UL_QUANTITY_ORIGINAL,
	CY_KG_QUANTITY_ORIGINAL,
	CY_CA_QUANTITY_ORIGINAL,
	CY_PK_QUANTITY_ORIGINAL,
	CY_CU_QUANTITY_ORIGINAL,
	CY_CONFIRMDATE_ORIGINAL,
	FCF_TOT_VOL_KG,
	FCF_TOT_VOL_CA,
	FCF_TOT_VOL_UL,
	FCF_TOT_VOL_PK,
	FCF_TOT_VOL_CU,
	FCF_BASE_VOL_KG,
	FCF_BASE_VOL_CA,
	FCF_BASE_VOL_UL,
	FCF_BASE_VOL_PK,
	FCF_BASE_VOL_CU,
	REPORT_FISCAL_YEAR,
	REPORT_FISCAL_YEAR_PERIOD_NO,
	FISCAL_YEAR_BEGIN_DT,
	FISCAL_YEAR_END_DT,
	UK_HOLIDAY_FLAG,
	DAY_OF_MONTH_BUSINESS,
	DAY_OF_MONTH_ACTUAL,
	PLANNING_WEEK_CODE,
	PLANNING_WEEK_START_DT,
	PLANNING_WEEK_END_DT,
	PLANNING_WEEK_NO,
	PLANNING_MONTH_CODE,
	PLANNING_MONTH_START_DT,
	PLANNING_MONTH_END_DT,
	PLANNING_QUARTER_NO,
	PLANNING_QUARTER_START_DT,
	PLANNING_QUARTER_END_DT,
	PLANNING_YEAR_NO,
	PLANNING_YEAR_START_DT,
	PLANNING_YEAR_END_DT,
	MARKET,
	SUBMARKET,
	TRADE_CLASS,
	TRADE_GROUP,
	TRADE_TYPE,
	TRADE_SECTOR,
	DESCRIPTION,
	ITEM_TYPE,
	BRANDING_DESC,
	PRODUCT_CLASS_DESC,
	SUB_PRODUCT_DESC,
	STRATEGIC_DESC,
	POWER_BRAND_DESC,
	MANUFACTURING_GROUP_DESC,
	CATEGORY_DESC,
	PACK_SIZE_DESC,
	SUB_CATEGORY_DESC,
	PROMO_TYPE_DESC,
	DUMMY_PRODUCT_FLAG,
	COMPANY,
	ORIGINAL_REQUESTED_SHIP_DT,
	TGT_MAPE,
	TGT_BIAS,
	OR_PLANNING_WEEK_CODE,
	OR_PLANNING_WEEK_START_DT,
	OR_PLANNING_WEEK_END_DT,
	OR_PLANNING_WEEK_NO,
	OR_PLANNING_MONTH_CODE,
	OR_PLANNING_MONTH_START_DT,
	OR_PLANNING_MONTH_END_DT,
	OR_PLANNING_QUARTER_NO,
	OR_PLANNING_QUARTER_START_DT,
	OR_PLANNING_QUARTER_END_DT,
	OR_PLANNING_YEAR_NO,
	OR_PLANNING_YEAR_START_DT,
	OR_PLANNING_YEAR_END_DT
from cte_final
