with onestream_hierarchy as (
    select * from {{ ref('src_ref_onestream_hier_stg') }}
),

cost_center_base as
(
    SELECT DISTINCT
        CHILD AS ACCOUNT_CODE,
        LEVEL AS NODE_LEVEL,
        LTRIM (SYS_CONNECT_BY_PATH (CHILD, '|')) LVL_CODES,
        LTRIM (SYS_CONNECT_BY_PATH (CHILD, '|')) LVL_DESC,
        CURRENT_DATE  AS LOAD_DATE,
        CURRENT_DATE  AS UPDATE_DATE
        FROM onestream_hierarchy 
        START WITH PARENT = 'root' AND AGGREGATIONWEIGHT IS NULL  CONNECT BY PRIOR CHILD = PARENT     
        AND XFK_METADATAROOT_DIMENSIONS_DI IN ('4')
),

onestream_cost_center as
(
    SELECT 
        'TAGETIK_ACCOUNT' as source_system, 
        'ACCOUNT' as hier_category, 
        'CONSOLIDATION_COSTCENTER' as hier_name,
        ACCOUNT_CODE,
        ACCOUNT_CODE AS LEAF_NODE,
        NODE_LEVEL,
        CASE WHEN NODE_LEVEL >= 1 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 1),    '^') ELSE ' ' END AS NODE_1, 
        CASE WHEN NODE_LEVEL >= 1 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 1),    '^') ELSE ' ' END AS DESC_1,
        CASE WHEN NODE_LEVEL >= 2 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 2),    '^') ELSE ' ' END AS NODE_2, 
        CASE WHEN NODE_LEVEL >= 2 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 2),    '^') ELSE ' ' END AS DESC_2, 
        CASE WHEN NODE_LEVEL >= 3 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 3),    '^') ELSE ' ' END AS NODE_3, 
        CASE WHEN NODE_LEVEL >= 3 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 3),    '^') ELSE ' ' END AS DESC_3, 
        CASE WHEN NODE_LEVEL >= 4 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 4),    '^') ELSE ' ' END AS NODE_4, 
        CASE WHEN NODE_LEVEL >= 4 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 4),    '^') ELSE ' ' END AS DESC_4, 
        CASE WHEN NODE_LEVEL >= 5 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 5),    '^') ELSE ' ' END AS NODE_5, 
        CASE WHEN NODE_LEVEL >= 5 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 5),    '^') ELSE ' ' END AS DESC_5, 
        CASE WHEN NODE_LEVEL >= 6 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 6),    '^') ELSE ' ' END AS NODE_6,
        CASE WHEN NODE_LEVEL >= 6 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 6),    '^') ELSE ' ' END AS DESC_6, 
        CASE WHEN NODE_LEVEL >= 7 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 7),    '^') ELSE ' ' END AS NODE_7, 
        CASE WHEN NODE_LEVEL >= 7 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 7),    '^') ELSE ' ' END AS DESC_7, 
        CASE WHEN NODE_LEVEL >= 8 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 8),    '^') ELSE ' ' END AS NODE_8, 
        CASE WHEN NODE_LEVEL >= 8 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 8),    '^') ELSE ' ' END AS DESC_8, 
        CASE WHEN NODE_LEVEL >= 9 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 9),    '^') ELSE ' ' END AS NODE_9, 
        CASE WHEN NODE_LEVEL >= 9 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 9),    '^') ELSE ' ' END AS DESC_9, 
        CASE WHEN NODE_LEVEL >= 10 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 10),    '^') ELSE ' ' END AS NODE_10, 
        CASE WHEN NODE_LEVEL >= 10 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 10),    '^') ELSE ' ' END AS DESC_10, 
        CASE WHEN NODE_LEVEL >= 11 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 11),    '^') ELSE ' ' END AS NODE_11, 
        CASE WHEN NODE_LEVEL >= 11 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 11),    '^') ELSE ' ' END AS DESC_11, 
        CASE WHEN NODE_LEVEL >= 12 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 12),    '^') ELSE ' ' END AS NODE_12, 
        CASE WHEN NODE_LEVEL >= 12 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 12),    '^') ELSE ' ' END AS DESC_12,
        CASE WHEN NODE_LEVEL >= 13 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 13),    '^') ELSE ' ' END AS NODE_13, 
        CASE WHEN NODE_LEVEL >= 13 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 13),    '^') ELSE ' ' END AS DESC_13,
        CASE WHEN NODE_LEVEL >= 14 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 14),    '^') ELSE ' ' END AS NODE_14, 
        CASE WHEN NODE_LEVEL >= 14 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 14),    '^') ELSE ' ' END AS DESC_14,
        CASE WHEN NODE_LEVEL >= 15 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 15),    '^') ELSE ' ' END AS NODE_15, 
        CASE WHEN NODE_LEVEL >= 15 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 15),    '^') ELSE ' ' END AS DESC_15,
        CASE WHEN NODE_LEVEL >= 16 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 16),    '^') ELSE ' ' END AS NODE_16, 
        CASE WHEN NODE_LEVEL >= 16 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 16),    '^') ELSE ' ' END AS DESC_16,
        CASE WHEN NODE_LEVEL >= 17 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 17),    '^') ELSE ' ' END AS NODE_17, 
        CASE WHEN NODE_LEVEL >= 17 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 17),    '^') ELSE ' ' END AS DESC_17,
        CASE WHEN NODE_LEVEL >= 18 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 18),    '^') ELSE ' ' END AS NODE_18, 
        CASE WHEN NODE_LEVEL >= 18 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 18),    '^') ELSE ' ' END AS DESC_18,
        CASE WHEN NODE_LEVEL >= 19 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 19),    '^') ELSE ' ' END AS NODE_19, 
        CASE WHEN NODE_LEVEL >= 19 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 19),    '^') ELSE ' ' END AS DESC_19,
        CASE WHEN NODE_LEVEL >= 20 THEN REPLACE (REGEXP_SUBSTR (LVL_CODES, '[^|]+', 1, 20),    '^') ELSE ' ' END AS NODE_20, 
        CASE WHEN NODE_LEVEL >= 20 THEN REPLACE (REGEXP_SUBSTR (LVL_DESC, '[^|]+', 1, 20),    '^') ELSE ' ' END AS DESC_20,
        LOAD_DATE AS LOAD_DATE, 
        UPDATE_DATE AS UPDATE_DATE
    from cost_center_base
    WHERE (TRIM(NODE_1) = 'Top' AND (TRIM(NODE_2) = '' OR TRIM(NODE_2) = 'CC_SegPft'))
)

select 
        cast (trim (source_system) as varchar2 (60)) as source_system,
        cast (trim (hier_category) as varchar2 (60)) as hier_category,
        cast (trim (hier_name) as varchar2 (60))     as hier_name,
        cast (trim (account_code) as varchar2 (60))  as tagetik_account,
        cast (trim (leaf_node) as varchar2 (60))     as leaf_node,
        cast (trim (node_level) as number (15))      as node_level,
        cast (trim (node_1) as varchar2 (60))        as node_1,
        cast (trim (desc_1) as varchar2 (255))       as desc_1, 
        cast (trim (node_2) as varchar2 (60))        as node_2, 
        cast (trim (desc_2) as varchar2 (255))       as desc_2, 
        cast (trim (node_3) as varchar2 (60))        as node_3, 
        cast (trim (desc_3) as varchar2 (255))       as desc_3, 
        cast (trim (node_4) as varchar2 (60))        as node_4, 
        cast (trim (desc_4) as varchar2 (255))       as desc_4, 
        cast (trim (node_5) as varchar2 (60))        as node_5, 
        cast (trim (desc_5) as varchar2 (255))       as desc_5, 
        cast (trim (node_6) as varchar2 (60))        as node_6, 
        cast (trim (desc_6) as varchar2 (255))       as desc_6, 
        cast (trim (node_7) as varchar2 (60))        as node_7, 
        cast (trim (desc_7) as varchar2 (255))       as desc_7, 
        cast (trim (node_8) as varchar2 (60))        as node_8, 
        cast (trim (desc_8) as varchar2 (255))       as desc_8, 
        cast (trim (node_9) as varchar2 (60))        as node_9, 
        cast (trim (desc_9) as varchar2 (255))       as desc_9, 
        cast (trim (node_10) as varchar2 (60))       as node_10,
        cast (trim (desc_10) as varchar2 (255))      as desc_10,
        cast (trim (node_11) as varchar2 (60))       as node_11,
        cast (trim (desc_11) as varchar2 (255))      as desc_11,
        cast (trim (node_12) as varchar2 (60))       as node_12,
        cast (trim (desc_12) as varchar2 (255))      as desc_12,
        cast (trim (node_13) as varchar2 (60))       as node_13,
        cast (trim (desc_13) as varchar2 (255))      as desc_13,
        cast (trim (node_14) as varchar2 (60))       as node_14,
        cast (trim (desc_14) as varchar2 (255))      as desc_14,
        cast (trim (node_15) as varchar2 (60))       as node_15,
        cast (trim (desc_15) as varchar2 (255))      as desc_15,
        cast (trim (node_16) as varchar2 (60))       as node_16,
        cast (trim (desc_16) as varchar2 (255))      as desc_16,
        cast (trim (node_17) as varchar2 (60))       as node_17,
        cast (trim (desc_17) as varchar2 (255))      as desc_17,
        cast (trim (node_18) as varchar2 (60))       as node_18,
        cast (trim (desc_18) as varchar2 (255))      as desc_18,
        cast (trim (node_19) as varchar2 (60))       as node_19,
        cast (trim (desc_19) as varchar2 (255))      as desc_19,
        cast (trim (node_20) as varchar2 (60))       as node_20,
        cast (trim (desc_20) as varchar2 (255))      as desc_20,
        load_date, 
        update_date      
    from onestream_cost_center