with PRM as(

    select * from {{ref('src_exc_dim_promotions')}}

),
D_GROUP as 
(
    select * from {{ref('src_exc_dim_promotions_group')}}
),

F_GROUP as 
(
    select * from {{ref('src_exc_fact_promotions_group_promotion')}}
),

PRM_X_MECH as
(
    select * from {{ref('src_exc_fact_promotion_mechanic')}}
),

MECH1 as 
(
    select * from {{ref('src_exc_dim_promotion_mechanic')}}
),

MECH_L1 as 
(
    select * from {{ref('src_exc_dim_promotion_mechanic_l1')}}
),

PRM_X_STAT as 
(
    select * from {{ref('src_exc_fact_promotion_status')}}
),
STAT1 as 
(
    select * from {{ref('src_exc_dim_promotion_statuses')}}
),

PHASE1 as 
(
    select * from {{ref('src_exc_dim_promotion_phasing')}}
),
PHASE_EFF as 
(
    select * from {{ref('src_exc_dim_promotion_phasing_effect')}}
),
PHASE_TYPE as 
(
    select * from {{ref('src_exc_dim_promotion_phasing_type')}}
),

PRM_X_PHASE as 
(
    select * from {{ref('src_exc_fact_promotion_phasing')}}
),
USERS as 
(
    SELECT USER_IDX,USER_FIRSTNAME,USER_LASTNAME from {{ref('src_exc_dim_users')}}
),
DIM_DATE as 
(
    select * from {{ref('src_exc_dim_promotion_dates')}}
),

FACT_DATE as 
(
    select * from {{ref('src_exc_fact_promotion_dates')}}
),

A as 
(
    select * from {{ref('src_exc_fact_promotion_attribute')}}
),

B as 
(
    select * from {{ref('src_exc_dim_promotion_attribute')}}
),

C as 
(
    select * from {{ref('src_exc_dim_promotion_attributegroup')}}
),

F as 
(
    select * from {{ref('src_exc_fact_promotion_customer_measure')}}
),

MEAS as 
(
    select * from {{ref('src_exc_dim_promotion_measures')}}
),

prom_cust as 
(
    select * from {{ref('src_exc_fact_promotion_customers')}}
),

PC_Cust as 
(
    select * from {{ref('src_exc_dim_pc_customer')}}
),

Currency as 
(
    select * from {{ref('src_exc_dim_currency')}}
),

BUY_IN_START as (
SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM
DIM_DATE
JOIN FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='BUY-IN START'
),

BUY_IN_END as
(
    SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM
 DIM_DATE
JOIN  FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='BUY-IN END'
),

IN_STORE_START as 
(
SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM

 DIM_DATE
JOIN  FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='IN-STORE START'
),

IN_STORE_END as(
    SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM
 DIM_DATE
JOIN  FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='IN-STORE END'
),

TEMPLATE_START as(
SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM
 DIM_DATE
JOIN  FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='START'
),

TEMPLATE_END as
(
SELECT FACT_DATE.PROMO_IDX,FACT_DATE.PROMODATE_VALUE FROM
 DIM_DATE
JOIN  FACT_DATE
on DIM_DATE.PROMODATE_IDX=FACT_DATE.PROMODATE_IDX WHERE UPPER(PROMODATE_NAME)='END'
),

FEATURE as
(
SELECT A.PROMO_IDX, B.ATTRIBUTE_CODE, B.ATTRIBUTE_NAME , B.ATTRIBUTEGROUP_IDX
FROM A
INNER JOIN B ON A.ATTRIBUTE_IDX = B.ATTRIBUTE_IDX
INNER JOIN C ON B.ATTRIBUTEGROUP_IDX = C.ATTRIBUTEGROUP_IDX WHERE TRIM(C.ATTRIBUTEGROUP_CODE)='FEATURE'
),


MECH_X as
(
SELECT F.PROMO_IDX
,MEAS.PROMOMEASURE_CODE AS PROMOMEASURE_CODE
,MEAS.PROMOMEASURE_NAME AS PROMOMEASURE_NAME
,F.PROMOMEASURE_VALUE AS PROMOMEASURE_VALUE
FROM F
INNER JOIN  MEAS
ON F.PromoMeasure_Idx= MEAS.PromoMeasure_Idx
WHERE PROMOMEASURE_CODE = 'MechanicRelVal'
),

MECH_Y as (SELECT F.PROMO_IDX
,MEAS.PROMOMEASURE_CODE AS PROMOMEASURE_CODE
,MEAS.PROMOMEASURE_NAME AS PROMOMEASURE_NAME
,F.PROMOMEASURE_VALUE AS PROMOMEASURE_VALUE
FROM  F
INNER JOIN MEAS
ON F.PromoMeasure_Idx= MEAS.PromoMeasure_Idx
WHERE PROMOMEASURE_CODE = 'MechanicRelVal_Y'
),

CURR as
(
SELECT DISTINCT prom_cust.PROMO_IDX, Currency.CURRENCY_CODE, Currency.CURRENCY_NAME, Currency.CURRENCY_SYMBOL  --Get Distinct with assumption that a Promo can only have 1 currency code.  At least for the purposes of the Mech Name.
FROM  prom_cust
INNER JOIN PC_Cust ON prom_cust.CUST_IDX = PC_Cust.IDX
INNER JOIN Currency ON PC_Cust.CURRENCY_IDX = Currency.CURRENCY_IDX
),

PRM_GROUP as(
SELECT F_GROUP.PROMO_IDX
,D_GROUP.PROMO_GROUP_IDX
,D_GROUP.PROMO_GROUP_NAME  
FROM F_GROUP 
JOIN  D_GROUP 
ON F_GROUP.PROMO_GROUP_IDX = D_GROUP.PROMO_GROUP_IDX
 ),

MECH as
(SELECT PRM_X_MECH.PROMO_IDX
,MECH_L1.MECHANIC_L1_IDX
,MECH_L1.MECHANIC_L1_NAME
,MECH1.MECHANIC_IDX
,CAST(MECH1.MECHANIC_NAME AS VARCHAR(255)) AS MECHANIC_NAME
,MECH1.MECHANIC_ISACTIVE
,MECH1.MECHANIC_DISCOUNT
FROM
 PRM_X_MECH
JOIN  MECH1  on MECH1.MECHANIC_IDX=PRM_X_MECH.MECHANIC_IDX
JOIN  MECH_L1  on MECH_L1.MECHANIC_L1_IDX=MECH1.MECHANIC_L1_IDX
),

STAT as
(SELECT PRM_X_STAT.PROMO_IDX
,STAT1.STATUS_IDX
,STAT1.STATUS_NAME
FROM
 PRM_X_STAT
JOIN  STAT1
on PRM_X_STAT.STATUS_IDX=STAT1.STATUS_IDX
),

SNAPSHOT1 as
(
    --changed from src_sls_wtx_lkp_snapshot_date to stg_d_wtx_lkp_snapshot_date
    select * from {{ref('stg_d_wtx_lkp_snapshot_date')}}
),


PHASE as
(
select 
PRM_X_PHASE.PROMO_IDX,
PHASE1.PHASE_IDX,
PHASE1.PHASE_NAME,
PHASE1.PHASE_LENGTH,
PHASE_EFF.PHASE_EFFECT_IDX,
PHASE_EFF.PHASE_EFFECT_NAME,
PHASE_TYPE.PHASE_TYPE_IDX,
PHASE_TYPE.PHASE_TYPE_NAME,
PHASE_TYPE.PHASE_TYPE_UNIT_LABEL
from  PHASE1
JOIN PHASE_EFF on PHASE1.PHASE_EFFECT_IDX=PHASE_EFF.PHASE_EFFECT_IDX
JOIN PHASE_TYPE on PHASE1.PHASE_TYPE_IDX=PHASE_TYPE.PHASE_TYPE_IDX
JOIN  PRM_X_PHASE on PHASE1.PHASE_IDX=PRM_X_PHASE.PHASE_IDX
),


SNAPSHOT as
(
select snapshot_Date from (
select *,rank() over (order by snapshot_Date desc) rnknum from SNAPSHOT1) where rnknum=1
),

stg as (
    SELECT  
'{{env_var("DBT_SOURCE_SYSTEM")}}' as SOURCE_SYSTEM
,PRM.PROMO_IDX AS PROMO_ID
,PRM.PROMO_CODE AS PROMO_CODE
,PRM.PROMO_NAME AS PROMO_DESC
,PRM_GROUP.PROMO_GROUP_IDX AS PROMO_GROUP_ID
,PRM_GROUP.PROMO_GROUP_NAME AS PROMO_GROUP_DESC
,MECH.MECHANIC_L1_IDX AS PROMO_TACTIC_ID
,MECH.MECHANIC_L1_NAME AS PROMO_TACTIC_DESC
,MECH.MECHANIC_IDX AS PROMO_SUB_TACTIC_ID
,REGEXP_REPLACE(MECH.MECHANIC_NAME,'£', NVL(CURR.CURRENCY_SYMBOL,'£')) AS PROMO_SUB_TACTIC_DESC
,MECH.MECHANIC_DISCOUNT AS PROMO_SUB_TACTIC_DISCOUNT
,MECH.MECHANIC_ISACTIVE AS PROMO_SUB_TACTIC_ISACTIVE
,STAT.STATUS_IDX AS PROMO_STAT_ID
,STAT.STATUS_NAME AS PROMO_STAT_DESC
,PHASE.PHASE_IDX AS PROMO_PHASE_ID
,PHASE.PHASE_NAME AS PROMO_PHASE_DESC
,PHASE.PHASE_LENGTH AS PROMO_PHASE_LENGTH
,PHASE.PHASE_EFFECT_IDX AS PROMO_PHASE_EFFECT_ID
,PHASE.PHASE_EFFECT_NAME AS PROMO_PHASE_EFFECT_DESC
,PHASE.PHASE_TYPE_IDX AS PROMO_PHASE_TYPE_ID
,PHASE.PHASE_TYPE_NAME AS PROMO_PHASE_TYPE_DESC
,PHASE.PHASE_TYPE_UNIT_LABEL AS PROMO_PHASE_TYPE_UNIT
,USERS.USER_FIRSTNAME || ' '||USERS.USER_LASTNAME AS AUTHORIZED_USER_NAME
,PRM.DATE_CREATED AS PERFORMANCE_START_DT
,PRM.LASTPROMOREBUILDDATE AS PERFORMANCE_END_DT
,PRM.LASTPROMOREBUILDDATE AS LAST_UPDATE_DATE
,BUY_IN_START.PROMODATE_VALUE as BUY_IN_START_DT
,BUY_IN_END.PROMODATE_VALUE as BUY_IN_END_DT
,IN_STORE_START.PROMODATE_VALUE as IN_STORE_START_DT
,IN_STORE_END.PROMODATE_VALUE as IN_STORE_END_DT
,TEMPLATE_START.PROMODATE_VALUE as TEMPLATE_START_DT
,TEMPLATE_END.PROMODATE_VALUE as TEMPLATE_END_DT
, FEATURE.ATTRIBUTE_CODE AS FEATURE
, FEATURE.ATTRIBUTE_NAME AS FEATURE_DESC
, CAST(REGEXP_REPLACE(CASE WHEN MECH.MECHANIC_NAME LIKE '%X%' OR MECH.MECHANIC_NAME LIKE '%Y%'
THEN REGEXP_REPLACE(REGEXP_REPLACE(MECH.MECHANIC_NAME , 'X', MECH_X.PROMOMEASURE_VALUE),'Y', MECH_Y.PROMOMEASURE_VALUE) 
ELSE MECH.MECHANIC_NAME END, '£', NVL(CURR.CURRENCY_SYMBOL,'£')) AS VARCHAR(255)) AS MECHANIC_NAME
FROM PRM
LEFT JOIN PRM_GROUP  ON PRM_GROUP.PROMO_IDX = PRM.PROMO_IDX
LEFT JOIN MECH on PRM.PROMO_IDX=MECH.PROMO_IDX
LEFT JOIN STAT ON PRM.PROMO_IDX=STAT.PROMO_IDX
LEFt JOIN PHASE ON PRM.PROMO_IDX=PHASE.PROMO_IDX
LEFT JOIN USERS ON PRM.PROMO_AUTHOR_USER_IDX = USERS.USER_IDX
LEFT JOIN BUY_IN_START ON BUY_IN_START.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN BUY_IN_END ON BUY_IN_END.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN IN_STORE_START ON IN_STORE_START.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN IN_STORE_END ON IN_STORE_END.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN TEMPLATE_START  ON IN_STORE_END.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN TEMPLATE_END  ON IN_STORE_END.PROMO_IDX=PRM.PROMO_IDX
left join FEATURE ON FEATURE.PROMO_IDX=PRM.PROMO_IDX
LEFT JOIN MECH_X ON PRM.PROMO_IDX=MECH_X.PROMO_IDX
LEFT JOIN MECH_Y ON PRM.PROMO_IDX=MECH_Y.PROMO_IDX
LEFT JOIN CURR ON PRM.PROMO_IDX=CURR.PROMO_IDX
ORDER BY PRM.PROMO_IDX asc
),

INT as(
SELECT
SOURCE_SYSTEM,
{{ dbt_utils.surrogate_key(['source_system','promo_id']) }} as promo_guid,
PROMO_ID,
PROMO_CODE,
PROMO_DESC,
PROMO_GROUP_ID,
PROMO_GROUP_DESC,
CAST(NULL AS NUMBER(38,0)) AS PROMO_CAT_ID,
CAST(NULL AS VARCHAR(255)) AS PROMO_CAT_DESC,
PROMO_TACTIC_ID,
PROMO_TACTIC_DESC,
PROMO_SUB_TACTIC_ID,
PROMO_SUB_TACTIC_DESC,
PROMO_SUB_TACTIC_DISCOUNT,
PROMO_SUB_TACTIC_ISACTIVE,
PROMO_STAT_ID,
PROMO_STAT_DESC,
PROMO_PHASE_ID,
PROMO_PHASE_DESC,
PROMO_PHASE_LENGTH,
PROMO_PHASE_EFFECT_ID,
PROMO_PHASE_EFFECT_DESC,
PROMO_PHASE_TYPE_ID,
PROMO_PHASE_TYPE_DESC,
PROMO_PHASE_TYPE_UNIT,
AUTHORIZED_USER_NAME,
PERFORMANCE_START_DT,
PERFORMANCE_END_DT,
cast(NULL as Timestamp) AS SHIP_START_DT,
cast(NULL as Timestamp) AS SHIP_END_DT,
cast(NULL as Timestamp) AS ALLOWANCE_START_DT,
cast(NULL as Timestamp) AS ALLOWANCE_END_DT,
LAST_UPDATE_DATE,
BUY_IN_START_DT,
BUY_IN_END_DT,
IN_STORE_START_DT,
IN_STORE_END_DT,
TEMPLATE_START_DT,
TEMPLATE_END_DT,
FEATURE,
FEATURE_DESC,
MECHANIC_NAME as PROMO_MECHANIC_NAME,
TRUNC(SNAPSHOT.snapshot_Date ,'DD') AS SNAPSHOT_DATE ,
TRUNC(SNAPSHOT.snapshot_Date ,'DD')  AS UPDATE_DATE,
ROW_NUMBER() OVER (PARTITION BY SOURCE_SYSTEM, PROMO_ID, SNAPSHOT_DATE ORDER BY 1) rowNum

from STG
LEFT JOIN SNAPSHOT ON 1=1
)

select 
source_system,
promo_guid,
PROMO_ID,
PROMO_CODE,
PROMO_DESC,
PROMO_GROUP_ID,
PROMO_GROUP_DESC,
PROMO_CAT_ID,
PROMO_CAT_DESC,
PROMO_TACTIC_ID,
PROMO_TACTIC_DESC,
PROMO_SUB_TACTIC_ID,
PROMO_SUB_TACTIC_DESC,
PROMO_SUB_TACTIC_DISCOUNT,
PROMO_SUB_TACTIC_ISACTIVE,
PROMO_STAT_ID,
PROMO_STAT_DESC,
PROMO_PHASE_ID,
PROMO_PHASE_DESC,
PROMO_PHASE_LENGTH,
PROMO_PHASE_EFFECT_ID,
PROMO_PHASE_EFFECT_DESC,
PROMO_PHASE_TYPE_ID,
PROMO_PHASE_TYPE_DESC,
PROMO_PHASE_TYPE_UNIT,
AUTHORIZED_USER_NAME,
PERFORMANCE_START_DT,
PERFORMANCE_END_DT,
SHIP_START_DT,
SHIP_END_DT,
ALLOWANCE_START_DT,
 ALLOWANCE_END_DT,
LAST_UPDATE_DATE,
BUY_IN_START_DT,
BUY_IN_END_DT,
IN_STORE_START_DT,
IN_STORE_END_DT,
TEMPLATE_START_DT,
TEMPLATE_END_DT,
FEATURE,
FEATURE_DESC,
PROMO_MECHANIC_NAME,
SNAPSHOT_DATE ,
UPDATE_DATE
from int where rownum=1